====== Test #1 =======
--- Input: size 145 ---
export function w $foo() {
@start
  %x =w copy 1
  jnz %x, @d1, @d2
@d1
  %y =w copy 1
  jmp @end
@d2
  %z = w copy 1
  jmp @end
@end
  ret %x
}

--- Output: size 66 ---
export function $foo() {
@start
	%x.1 =w copy 1
@end
	retw %x.1
}

--- Correct: size 66 ---
export function $foo() {
@start
	%x.1 =w copy 1
@end
	retw %x.1
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=7, maxvsz=34754560, maxrss=3600384, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=4, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #2 =======
--- Input: size 196 ---
export function w $bar() {
@start
      %x =w copy 1
      jnz %x, @d1, @d2
@d1
      %y =w copy 1
      %x =w mul %x, %y
      jmp @end
@d2
      %z = w copy 1
      jmp @end
@end
      ret %x
}

--- Output: size 177 ---
export function $bar() {
@start
	%x.1 =w copy 1
	jnz %x.1, @d1, @d2
@d1
	%y =w copy 1
	%x.3 =w mul %x.1, %y
	jmp @end
@d2
	nop
@end
	%x.2 =w phi @d2 %x.1, @d1 %x.3
	retw %x.2
}

--- Correct: size 177 ---
export function $bar() {
@start
	%x.1 =w copy 1
	jnz %x.1, @d1, @d2
@d1
	%y =w copy 1
	%x.3 =w mul %x.1, %y
	jmp @end
@d2
	nop
@end
	%x.2 =w phi @d2 %x.1, @d1 %x.3
	retw %x.2
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=0, stime=4, ptime=4, rtime=5, maxvsz=21696512, maxrss=3440640, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #3 =======
--- Input: size 219 ---
export function w $baz() {
@start
      %x =w copy 1
      %w =w mul %x, %x
      jnz %x, @d1, @d2
@d1
      %y =w copy 1
      %x =w mul %x, %y
      jmp @end
@d2
      %z = w copy 1
      jmp @end
@end
      ret %w
}

--- Output: size 90 ---
export function $baz() {
@start
	%x.2 =w copy 1
	%w.3 =w mul %x.2, %x.2
@end
	retw %w.3
}

--- Correct: size 90 ---
export function $baz() {
@start
	%x.2 =w copy 1
	%w.3 =w mul %x.2, %x.2
@end
	retw %w.3
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=5, maxvsz=21696512, maxrss=3731456, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #4 =======
--- Input: size 90 ---
function w $baz(l %p) {
@start
      %x =w loadw %p
      %w =w mul %x, %x
      ret %p
}

--- Output: size 57 ---
function $baz() {
@start
	%p =l par
	nop
	nop
	retw %p
}

--- Correct: size 57 ---
function $baz() {
@start
	%p =l par
	nop
	nop
	retw %p
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=6, maxvsz=21696512, maxrss=3571712, nvcsw=1, nivcsw=3 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #5 =======
--- Input: size 252 ---
function w $baz(l %p) {
@start
      %x =w loadw %p
      %w =w mul %x, %x
      %c =w ceqw %w, %x
      jnz %c, @ret, @stor

@stor
      storew %w, %p
      %z =w copy %w
      jmp @ret

@ret
      %z =w loadw %p
      %z =w add %z, %x
      ret %p
}

--- Output: size 183 ---
function $baz() {
@start
	%p.4 =l par
	%x.5 =w load %p.4
	%w.6 =w mul %x.5, %x.5
	%c =w ceqw %w.6, %x.5
	jnz %c, @ret, @stor
@stor
	storew %w.6, %p.4
	nop
@ret
	nop
	nop
	retw %p.4
}

--- Correct: size 183 ---
function $baz() {
@start
	%p.4 =l par
	%x.5 =w load %p.4
	%w.6 =w mul %x.5, %x.5
	%c =w ceqw %w.6, %x.5
	jnz %c, @ret, @stor
@stor
	storew %w.6, %p.4
	nop
@ret
	nop
	nop
	retw %p.4
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=0, stime=0, ptime=0, rtime=5, maxvsz=21696512, maxrss=3518464, nvcsw=1, nivcsw=3 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #6 =======
--- Input: size 302 ---
function w $baz(l %p, w %q) {
@start
      %x =w loadw %p
      %w =w mul %x, %x
      %c =w ceqw %w, %x
      jnz %c, @ret, @stor

@stor
      storew %w, %p
      %z =w copy %w
      jmp @ret2

@ret
      %z =w loadw %p
      %z =w add %z, %x
      ret %p

@ret2
      %z =w add %q, %q
      ret %q
}

--- Output: size 229 ---
function $baz() {
@start
	%p.5 =l par
	%q.6 =w par
	%x.7 =w load %p.5
	%w.8 =w mul %x.7, %x.7
	%c =w ceqw %w.8, %x.7
	jnz %c, @ret, @stor
@stor
	storew %w.8, %p.5
	nop
	jmp @ret2
@ret
	nop
	nop
	retw %p.5
@ret2
	nop
	retw %q.6
}

--- Correct: size 229 ---
function $baz() {
@start
	%p.5 =l par
	%q.6 =w par
	%x.7 =w load %p.5
	%w.8 =w mul %x.7, %x.7
	%c =w ceqw %w.8, %x.7
	jnz %c, @ret, @stor
@stor
	storew %w.8, %p.5
	nop
	jmp @ret2
@ret
	nop
	nop
	retw %p.5
@ret2
	nop
	retw %q.6
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=6, maxvsz=21696512, maxrss=3694592, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=2, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=3 }

====== Test #7 =======
--- Input: size 322 ---
function w $baz(l %p, w %q) {
@start
      %x =w loadw %p
      %w =w mul %x, %x
      %c =w ceqw %w, %x
      jnz %c, @ret, @stor

@stor
      storew %w, %p
      %z =w copy %w
      jmp @ret2

@ret
      %z =w loadw %p
      %z =w add %z, %x
      ret %p

@ret2
      %z =w add %q, %q
      ret %q

@ret3
      ret %q
}

--- Output: size 229 ---
function $baz() {
@start
	%p.5 =l par
	%q.6 =w par
	%x.7 =w load %p.5
	%w.8 =w mul %x.7, %x.7
	%c =w ceqw %w.8, %x.7
	jnz %c, @ret, @stor
@stor
	storew %w.8, %p.5
	nop
	jmp @ret2
@ret
	nop
	nop
	retw %p.5
@ret2
	nop
	retw %q.6
}

--- Correct: size 229 ---
function $baz() {
@start
	%p.5 =l par
	%q.6 =w par
	%x.7 =w load %p.5
	%w.8 =w mul %x.7, %x.7
	%c =w ceqw %w.8, %x.7
	jnz %c, @ret, @stor
@stor
	storew %w.8, %p.5
	nop
	jmp @ret2
@ret
	nop
	nop
	retw %p.5
@ret2
	nop
	retw %q.6
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=0, stime=4, ptime=4, rtime=5, maxvsz=21696512, maxrss=3571712, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #8 =======
--- Input: size 61 ---
function w $unused_param(w %p, w %q) {
@start
      ret %p
}

--- Output: size 61 ---
function $unused_param() {
@start
	%p =w par
	nop
	retw %p
}

--- Correct: size 61 ---
function $unused_param() {
@start
	%p =w par
	nop
	retw %p
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=0, stime=0, ptime=0, rtime=4, maxvsz=21696512, maxrss=3440640, nvcsw=1, nivcsw=3 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #9 =======
--- Input: size 546 ---
# an example with reducible control
# flow graph that exposes poor
# handling of looping constructs

function $test() {
@start
	%ten =w copy 10
	%dum =w copy 0  # dummy live-through temporary
@loop
	%alt =w phi @start 0, @left %alt1, @right %alt1
	%cnt =w phi @start 100, @left %cnt, @right %cnt1
	%alt1 =w sub 1, %alt
	jnz %alt1, @right, @left
@left
	%x =w phi @loop 10, @left %x1
	%x1 =w sub %x, 1
	%z =w copy %x
	jnz %z, @left, @loop
@right
	%cnt1 =w sub %cnt, %ten
	jnz %cnt1, @loop, @end
@end
	%ret =w add %cnt, %dum
	ret # hmm, ret %ret?
}

--- Output: size 54 ---
function $test() {
@start
	nop
	nop
@end
	nop
	ret0
}

--- Correct: size 54 ---
function $test() {
@start
	nop
	nop
@end
	nop
	ret0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=0, stime=4, ptime=4, rtime=5, maxvsz=21696512, maxrss=3358720, nvcsw=1, nivcsw=3 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #10 =======
--- Input: size 352 ---
# Hi there.
# If this test fails, consider implementing
# https://compilers.ispras.ru/materials/MarkAndSweep.pdf, p.6.

function w $test() {
@start
        %x =w copy 0
	jnz 1, @left, @end
@left
        %x =w copy 3
        jnz 2, @dead, @undead
@dead
        %y =w copy 3
        jmp @end
@undead
        %y =w copy 33
        jmp @end
@end
	ret %x
}

--- Output: size 127 ---
function $test() {
@start
	%x.3 =w copy 0
	jnz 1, @left, @end
@left
	%x.5 =w copy 3
@end
	%x.4 =w phi @start %x.3
	retw %x.4
}

--- Correct: size 127 ---
function $test() {
@start
	%x.3 =w copy 0
	jnz 1, @left, @end
@left
	%x.5 =w copy 3
@end
	%x.4 =w phi @start %x.3
	retw %x.4
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=5, maxvsz=21696512, maxrss=3596288, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=3 }

====== Test #11 =======
--- Input: size 572 ---
# an example with reducible control
# flow graph that exposes poor
# handling of looping constructs

function w $test() {
@start
	%ten =w copy 10
	%dum =w copy 0  # dummy live-through temporary
@loop
	%alt =w phi @start 0, @left %alt1, @right %alt1
	%cnt =w phi @start 100, @left %cnt, @right %cnt1
	%alt1 =w sub 1, %alt
	jnz %alt1, @right, @left
@left
	%x =w phi @loop 10, @left %x1
	%x1 =w sub %x, 1
	%z =w copy %x
	jnz %z, @left, @loop
@right
	%cnt1 =w sub %cnt, %ten
	jnz %cnt1, @loop, @end
@end
	%fake_ret =w add %cnt, %dum
	ret %dum # dummy live-through temporary
}

--- Output: size 74 ---
function $test() {
@start
	nop
	%dum.2 =w copy 0
@end
	nop
	retw %dum.2
}

--- Correct: size 74 ---
function $test() {
@start
	nop
	%dum.2 =w copy 0
@end
	nop
	retw %dum.2
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=0, stime=4, ptime=4, rtime=6, maxvsz=21696512, maxrss=3530752, nvcsw=1, nivcsw=3 }
checker: { utime=0, stime=0, ptime=0, rtime=4, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=3 }

====== Test #12 =======
--- Input: size 180 ---
function w $main() {
@start
    %x =w copy 5
@loop
    %x =w mul %x, %x
    %cond =w csgew %x, 200
    jnz %cond, @end, @loop
@end
    %t =w call $printf(l $fmt, w %x)
    ret 0
}

--- Output: size 216 ---
function $main() {
@start
	%x.1 =w copy 5
@loop
	%x.2 =w phi @start %x.1, @loop %x.3
	%x.3 =w mul %x.2, %x.2
	%cond =w csgew %x.3, 200
	jnz %cond, @end, @loop
@end
	argl $fmt
	argw %x.3
	%t =w call $printf
	retw 0
}

--- Correct: size 216 ---
function $main() {
@start
	%x.1 =w copy 5
@loop
	%x.2 =w phi @start %x.1, @loop %x.3
	%x.3 =w mul %x.2, %x.2
	%cond =w csgew %x.3, 200
	jnz %cond, @end, @loop
@end
	argl $fmt
	argw %x.3
	%t =w call $printf
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=0, stime=4, ptime=4, rtime=6, maxvsz=34594816, maxrss=3489792, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=3 }

====== Test #13 =======
--- Input: size 1000 ---
export function $sieve(w %n, l %prime) {
@fill0.cond
  %cond =w csgtw %n, 0
  jnz %cond, @fill0.body, @fill0.exit

@fill0.body
  storeb 0, %prime

@fill0.exit
  %cond =w csgtw %n, 1
  jnz %cond, @fill1.body, @fill1.exit

@fill1.body
  %addr =l add %prime, 1
  storeb 0, %addr

@fill1.exit
  %i =w cast 2

@fill2.header
  %cond =w csltw %i, %n
  jnz %cond, @fill2.body, @fill2.exit

@fill2.body
  %i1 =l extsw %i
  %addr =l add %prime, %i1
  storeb 1, %addr
  %i =w add %i, 1
  jmp @fill2.header

@fill2.exit
  %i =w cast 1

@outer.header
  %i =w add %i, 1
  %cond =w csltw %i, %n
  jnz %cond, @outer.cond,  @outer.exit

@outer.cond
  %i1 =l extsw %i
  %addr =l add %prime, %i1
  %value =w loadsb %addr
  jnz %value, @inner.preheader, @outer.header

@inner.preheader
  %j =w mul %i, %i

@inner.header
  %cond =w csltw %j, %n
  jnz %cond, @inner.body, @outer.header

@inner.body
  %j1 =l extsw %j
  %addr =l add %prime, %j1
  storeb 0, %addr
  %j =w add %j, %i
  jmp @inner.header

@outer.exit
  ret
}

--- Output: size 1284 ---
export function $sieve() {
@fill0.cond
	%n.12 =w par
	%prime.13 =l par
	%cond.1 =w csgtw %n.12, 0
	jnz %cond.1, @fill0.body, @fill0.exit
@fill0.body
	storeb 0, %prime.13
@fill0.exit
	%cond.2 =w csgtw %n.12, 1
	jnz %cond.2, @fill1.body, @fill1.exit
@fill1.body
	%addr.6 =l add %prime.13, 1
	storeb 0, %addr.6
@fill1.exit
	%i.14 =w cast 2
@fill2.header
	%i.15 =w phi @fill1.exit %i.14, @fill2.body %i.22
	%cond.3 =w csltw %i.15, %n.12
	jnz %cond.3, @fill2.body, @fill2.exit
@fill2.body
	%i1.10 =l extsw %i.15
	%addr.7 =l add %prime.13, %i1.10
	storeb 1, %addr.7
	%i.22 =w add %i.15, 1
	jmp @fill2.header
@fill2.exit
	%i.16 =w cast 1
@outer.header
	%i.17 =w phi @fill2.exit %i.16, @outer.cond %i.18, @inner.header %i.18
	%i.18 =w add %i.17, 1
	%cond.4 =w csltw %i.18, %n.12
	jnz %cond.4, @outer.cond, @outer.exit
@outer.cond
	%i1.11 =l extsw %i.18
	%addr.8 =l add %prime.13, %i1.11
	%value =w loadsb %addr.8
	jnz %value, @inner.preheader, @outer.header
@inner.preheader
	%j.19 =w mul %i.18, %i.18
@inner.header
	%j.20 =w phi @inner.preheader %j.19, @inner.body %j.21
	%cond.5 =w csltw %j.20, %n.12
	jnz %cond.5, @inner.body, @outer.header
@inner.body
	%j1 =l extsw %j.20
	%addr.9 =l add %prime.13, %j1
	storeb 0, %addr.9
	%j.21 =w add %j.20, %i.18
	jmp @inner.header
@outer.exit
	ret0
}

--- Correct: size 1284 ---
export function $sieve() {
@fill0.cond
	%n.12 =w par
	%prime.13 =l par
	%cond.1 =w csgtw %n.12, 0
	jnz %cond.1, @fill0.body, @fill0.exit
@fill0.body
	storeb 0, %prime.13
@fill0.exit
	%cond.2 =w csgtw %n.12, 1
	jnz %cond.2, @fill1.body, @fill1.exit
@fill1.body
	%addr.6 =l add %prime.13, 1
	storeb 0, %addr.6
@fill1.exit
	%i.14 =w cast 2
@fill2.header
	%i.15 =w phi @fill1.exit %i.14, @fill2.body %i.22
	%cond.3 =w csltw %i.15, %n.12
	jnz %cond.3, @fill2.body, @fill2.exit
@fill2.body
	%i1.10 =l extsw %i.15
	%addr.7 =l add %prime.13, %i1.10
	storeb 1, %addr.7
	%i.22 =w add %i.15, 1
	jmp @fill2.header
@fill2.exit
	%i.16 =w cast 1
@outer.header
	%i.17 =w phi @fill2.exit %i.16, @outer.cond %i.18, @inner.header %i.18
	%i.18 =w add %i.17, 1
	%cond.4 =w csltw %i.18, %n.12
	jnz %cond.4, @outer.cond, @outer.exit
@outer.cond
	%i1.11 =l extsw %i.18
	%addr.8 =l add %prime.13, %i1.11
	%value =w loadsb %addr.8
	jnz %value, @inner.preheader, @outer.header
@inner.preheader
	%j.19 =w mul %i.18, %i.18
@inner.header
	%j.20 =w phi @inner.preheader %j.19, @inner.body %j.21
	%cond.5 =w csltw %j.20, %n.12
	jnz %cond.5, @inner.body, @outer.header
@inner.body
	%j1 =l extsw %j.20
	%addr.9 =l add %prime.13, %j1
	storeb 0, %addr.9
	%j.21 =w add %j.20, %i.18
	jmp @inner.header
@outer.exit
	ret0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=7, maxvsz=34603008, maxrss=3629056, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #14 =======
--- Input: size 259 ---
export function $sieve(w %n, l %prime) {
@fill0.cond
  %uuu =l alloc4 4
  %cond1 =w csgtw %n, 0
  jnz %cond1, @fill0.body, @fill2.header

@fill0.body
  storeb 0, %prime

@fill0.exit
  %n =w cast 2
  %uuu =l alloc8 2
  %uuu =l alloc16 1

@fill2.header
  ret
}

--- Output: size 193 ---
export function $sieve() {
@fill0.cond
	%n.1 =w par
	%prime.6 =l par
	nop
	%cond1 =w csgtw %n.1, 0
	jnz %cond1, @fill0.body, @fill2.header
@fill0.body
	storeb 0, %prime.6
@fill2.header
	ret0
}

--- Correct: size 193 ---
export function $sieve() {
@fill0.cond
	%n.1 =w par
	%prime.6 =l par
	nop
	%cond1 =w csgtw %n.1, 0
	jnz %cond1, @fill0.body, @fill2.header
@fill0.body
	storeb 0, %prime.6
@fill2.header
	ret0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=6, maxvsz=21696512, maxrss=3633152, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=2, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=3 }

====== Test #15 =======
--- Input: size 1963 ---
export function w $plot(w %t0, w %t1, w %t2) {
@l0
	%x =l alloc4 4
	storew %t0, %x
	%y =l alloc4 4
	storew %t1, %y
	%rnd =l alloc4 4
	storew %t2, %rnd
	%n =l alloc4 4
	%fx =l alloc4 4
	%fy =l alloc4 4
	%zx =l alloc4 4
	%zy =l alloc4 4
	%nx =l alloc4 4
	%ny =l alloc4 4
	%W =l alloc4 4
	%H =l alloc4 4
	%col =l alloc8 8
	%t7 =w loadw %x
	%t9 =w loadw %W
	%t8 =w div %t9, 2
	%t6 =w sub %t7, %t8
	%t5 =w mul %t6, 4000
	%t12 =w loadw %W
	%t4 =w div %t5, %t12
	storew %t4, %fx
	%t17 =w loadw %y
	%t19 =w loadw %H
	%t18 =w div %t19, 2
	%t16 =w sub %t17, %t18
	%t15 =w mul %t16, 4000
	%t22 =w loadw %H
	%t14 =w div %t15, %t22
	storew %t14, %fy
	%t24 =w loadw %fx
	storew %t24, %zx
	%t26 =w loadw %fy
	storew %t26, %zy
	storew 0, %n
@l1
	%t30 =w loadw %n
	%t29 =w csltw %t30, 200
	jnz %t29, @l2, @l3
@l2
	%t36 =w loadw %zx
	%t37 =w loadw %zx
	%t35 =w mul %t36, %t37
	%t39 =w loadw %zy
	%t40 =w loadw %zy
	%t38 =w mul %t39, %t40
	%t34 =w add %t35, %t38
	%t32 =w csltw 4000000, %t34
	jnz %t32, @l4, @l5
@l4
	jmp @l3
@l5
	%t46 =w loadw %zx
	%t47 =w loadw %zx
	%t45 =w mul %t46, %t47
	%t44 =w div %t45, 1000
	%t51 =w loadw %zy
	%t52 =w loadw %zy
	%t50 =w mul %t51, %t52
	%t49 =w div %t50, 1000
	%t43 =w sub %t44, %t49
	%t54 =w loadw %fx
	%t42 =w add %t43, %t54
	storew %t42, %nx
	%t59 =w loadw %zx
	%t60 =w loadw %zy
	%t58 =w mul %t59, %t60
	%t57 =w div %t58, 500
	%t62 =w loadw %fy
	%t56 =w add %t57, %t62
	storew %t56, %ny
	%t64 =w loadw %nx
	storew %t64, %zx
	%t66 =w loadw %ny
	storew %t66, %zy
	%t68 =w loadw %n
	%t67 =w add %t68, 1
	storew %t67, %n
	jmp @l1
@l3
	%t72 =l loadl %col
	%t73 =w loadw %n
	%t74 =l extsw %t73
	%t75 =l mul 4, %t74
	%t71 =l add %t72, %t75
	%t70 =w loadw %t71
	storew %t70, %n
	%t77 =w loadw %rnd
	%t79 =w loadw %n
	%t80 =w loadw %n
	%t76 =w call $SDL_SetRenderDrawColor(w %t77, w 100, w %t79, w %t80, w 255, ...)
	%t83 =w loadw %rnd
	%t84 =w loadw %x
	%t85 =w loadw %y
	%t82 =w call $SDL_RenderDrawPoint(w %t83, w %t84, w %t85, ...)
	ret 0
}


--- Output: size 2074 ---
export function $plot() {
@l0
	%t0 =w par
	%t1 =w par
	%t2 =w par
	%x.1 =l alloc4 4
	storew %t0, %x.1
	%y.2 =l alloc4 4
	storew %t1, %y.2
	%rnd.3 =l alloc4 4
	storew %t2, %rnd.3
	%n.4 =l alloc4 4
	%fx.5 =l alloc4 4
	%fy.6 =l alloc4 4
	%zx.7 =l alloc4 4
	%zy.8 =l alloc4 4
	%nx.9 =l alloc4 4
	%ny.10 =l alloc4 4
	%W =l alloc4 4
	%H =l alloc4 4
	%col.11 =l alloc8 8
	%t7 =w load %x.1
	%t9 =w load %W
	%t8 =w div %t9, 2
	%t6 =w sub %t7, %t8
	%t5 =w mul %t6, 4000
	%t12 =w load %W
	%t4 =w div %t5, %t12
	storew %t4, %fx.5
	%t17 =w load %y.2
	%t19 =w load %H
	%t18 =w div %t19, 2
	%t16 =w sub %t17, %t18
	%t15 =w mul %t16, 4000
	%t22 =w load %H
	%t14 =w div %t15, %t22
	storew %t14, %fy.6
	%t24 =w load %fx.5
	storew %t24, %zx.7
	%t26 =w load %fy.6
	storew %t26, %zy.8
	storew 0, %n.4
@l1
	%t30 =w load %n.4
	%t29 =w csltw %t30, 200
	jnz %t29, @l2, @l3
@l2
	%t36 =w load %zx.7
	%t37 =w load %zx.7
	%t35 =w mul %t36, %t37
	%t39 =w load %zy.8
	%t40 =w load %zy.8
	%t38 =w mul %t39, %t40
	%t34 =w add %t35, %t38
	%t32 =w csltw 4000000, %t34
	jnz %t32, @l4, @l5
@l4
	jmp @l3
@l5
	%t46 =w load %zx.7
	%t47 =w load %zx.7
	%t45 =w mul %t46, %t47
	%t44 =w div %t45, 1000
	%t51 =w load %zy.8
	%t52 =w load %zy.8
	%t50 =w mul %t51, %t52
	%t49 =w div %t50, 1000
	%t43 =w sub %t44, %t49
	%t54 =w load %fx.5
	%t42 =w add %t43, %t54
	storew %t42, %nx.9
	%t59 =w load %zx.7
	%t60 =w load %zy.8
	%t58 =w mul %t59, %t60
	%t57 =w div %t58, 500
	%t62 =w load %fy.6
	%t56 =w add %t57, %t62
	storew %t56, %ny.10
	%t64 =w load %nx.9
	storew %t64, %zx.7
	%t66 =w load %ny.10
	storew %t66, %zy.8
	%t68 =w load %n.4
	%t67 =w add %t68, 1
	storew %t67, %n.4
	jmp @l1
@l3
	%t72 =l load %col.11
	%t73 =w load %n.4
	%t74 =l extsw %t73
	%t75 =l mul 4, %t74
	%t71 =l add %t72, %t75
	%t70 =w load %t71
	storew %t70, %n.4
	%t77 =w load %rnd.3
	%t79 =w load %n.4
	%t80 =w load %n.4
	argw %t77
	argw 100
	argw %t79
	argw %t80
	argw 255
	%t76 =w vacall $SDL_SetRenderDrawColor
	%t83 =w load %rnd.3
	%t84 =w load %x.1
	%t85 =w load %y.2
	argw %t83
	argw %t84
	argw %t85
	%t82 =w vacall $SDL_RenderDrawPoint
	retw 0
}

--- Correct: size 2074 ---
export function $plot() {
@l0
	%t0 =w par
	%t1 =w par
	%t2 =w par
	%x.1 =l alloc4 4
	storew %t0, %x.1
	%y.2 =l alloc4 4
	storew %t1, %y.2
	%rnd.3 =l alloc4 4
	storew %t2, %rnd.3
	%n.4 =l alloc4 4
	%fx.5 =l alloc4 4
	%fy.6 =l alloc4 4
	%zx.7 =l alloc4 4
	%zy.8 =l alloc4 4
	%nx.9 =l alloc4 4
	%ny.10 =l alloc4 4
	%W =l alloc4 4
	%H =l alloc4 4
	%col.11 =l alloc8 8
	%t7 =w load %x.1
	%t9 =w load %W
	%t8 =w div %t9, 2
	%t6 =w sub %t7, %t8
	%t5 =w mul %t6, 4000
	%t12 =w load %W
	%t4 =w div %t5, %t12
	storew %t4, %fx.5
	%t17 =w load %y.2
	%t19 =w load %H
	%t18 =w div %t19, 2
	%t16 =w sub %t17, %t18
	%t15 =w mul %t16, 4000
	%t22 =w load %H
	%t14 =w div %t15, %t22
	storew %t14, %fy.6
	%t24 =w load %fx.5
	storew %t24, %zx.7
	%t26 =w load %fy.6
	storew %t26, %zy.8
	storew 0, %n.4
@l1
	%t30 =w load %n.4
	%t29 =w csltw %t30, 200
	jnz %t29, @l2, @l3
@l2
	%t36 =w load %zx.7
	%t37 =w load %zx.7
	%t35 =w mul %t36, %t37
	%t39 =w load %zy.8
	%t40 =w load %zy.8
	%t38 =w mul %t39, %t40
	%t34 =w add %t35, %t38
	%t32 =w csltw 4000000, %t34
	jnz %t32, @l4, @l5
@l4
	jmp @l3
@l5
	%t46 =w load %zx.7
	%t47 =w load %zx.7
	%t45 =w mul %t46, %t47
	%t44 =w div %t45, 1000
	%t51 =w load %zy.8
	%t52 =w load %zy.8
	%t50 =w mul %t51, %t52
	%t49 =w div %t50, 1000
	%t43 =w sub %t44, %t49
	%t54 =w load %fx.5
	%t42 =w add %t43, %t54
	storew %t42, %nx.9
	%t59 =w load %zx.7
	%t60 =w load %zy.8
	%t58 =w mul %t59, %t60
	%t57 =w div %t58, 500
	%t62 =w load %fy.6
	%t56 =w add %t57, %t62
	storew %t56, %ny.10
	%t64 =w load %nx.9
	storew %t64, %zx.7
	%t66 =w load %ny.10
	storew %t66, %zy.8
	%t68 =w load %n.4
	%t67 =w add %t68, 1
	storew %t67, %n.4
	jmp @l1
@l3
	%t72 =l load %col.11
	%t73 =w load %n.4
	%t74 =l extsw %t73
	%t75 =l mul 4, %t74
	%t71 =l add %t72, %t75
	%t70 =w load %t71
	storew %t70, %n.4
	%t77 =w load %rnd.3
	%t79 =w load %n.4
	%t80 =w load %n.4
	argw %t77
	argw 100
	argw %t79
	argw %t80
	argw 255
	%t76 =w vacall $SDL_SetRenderDrawColor
	%t83 =w load %rnd.3
	%t84 =w load %x.1
	%t85 =w load %y.2
	argw %t83
	argw %t84
	argw %t85
	%t82 =w vacall $SDL_RenderDrawPoint
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=8, stime=0, ptime=8, rtime=10, maxvsz=21696512, maxrss=3407872, nvcsw=1, nivcsw=4 }
checker: { utime=0, stime=0, ptime=0, rtime=5, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=3 }

====== Test #16 =======
--- Input: size 362 ---
function $test() {
@start
   %e.5 =l alloc8 8
   %ie.6 =l alloc8 8
@l10
   jnz 1, @l11, @l12
@l11
   %t77 =l load %e.5
   %t76 =w call $SDL_PollEvent(l %t77, ...)
   jnz %t76, @l13, @l14
@l13
   %t81 =l load %ie.6
   %t80 =l add %t81, 0
   %t79 =w load %t80
   %t78 =w ceqw %t79, 769
   jnz %t78, @l16, @l17
@l16
   jmp @l12
@l17
@l14
   jmp @l10
@l12
    ret
}

--- Output: size 342 ---
function $test() {
@start
	%e.5.1 =l alloc8 8
	%ie.6.2 =l alloc8 8
@l10
	jnz 1, @l11, @l12
@l11
	%t77 =l load %e.5.1
	argl %t77
	%t76 =w vacall $SDL_PollEvent
	jnz %t76, @l13, @l14
@l13
	%t81 =l load %ie.6.2
	%t80 =l add %t81, 0
	%t79 =w load %t80
	%t78 =w ceqw %t79, 769
	jnz %t78, @l16, @l17
@l16
	jmp @l12
@l17
@l14
	jmp @l10
@l12
	ret0
}

--- Correct: size 342 ---
function $test() {
@start
	%e.5.1 =l alloc8 8
	%ie.6.2 =l alloc8 8
@l10
	jnz 1, @l11, @l12
@l11
	%t77 =l load %e.5.1
	argl %t77
	%t76 =w vacall $SDL_PollEvent
	jnz %t76, @l13, @l14
@l13
	%t81 =l load %ie.6.2
	%t80 =l add %t81, 0
	%t79 =w load %t80
	%t78 =w ceqw %t79, 769
	jnz %t78, @l16, @l17
@l16
	jmp @l12
@l17
@l14
	jmp @l10
@l12
	ret0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=8, maxvsz=28598272, maxrss=3551232, nvcsw=1, nivcsw=1 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=0, maxrss=1855488, nvcsw=1, nivcsw=1 }

====== Test #17 =======
--- Input: size 1002 ---
export function w $main() {
@l0
	%n =l alloc4 4
	%t =l alloc4 4
	%c =l alloc4 4
	%p =l alloc4 4
	storew 0, %c
	storew 2, %n
@l1
	%t5 =w loadw %n
	%t4 =w csltw %t5, 5000
	jnz %t4, @l2, @l3
@l2
	storew 2, %t
	storew 1, %p
@l4
	%t13 =w loadw %t
	%t14 =w loadw %t
	%t12 =w mul %t13, %t14
	%t15 =w loadw %n
	%t11 =w cslew %t12, %t15
	jnz %t11, @l5, @l6
@l5
	%t18 =w loadw %n
	%t19 =w loadw %t
	%t17 =w rem %t18, %t19
	%t16 =w ceqw %t17, 0
	jnz %t16, @l7, @l8
@l7
	storew 0, %p
@l8
	%t24 =w loadw %t
	%t23 =w add %t24, 1
	storew %t23, %t
	jmp @l4
@l6
	%t25 =w loadw %p
	jnz %t25, @l10, @l11
@l10
	%t26 =w loadw %c
	jnz %t26, @l16, @l14
@l16
	%t29 =w loadw %c
	%t28 =w rem %t29, 10
	%t27 =w ceqw %t28, 0
	jnz %t27, @l13, @l14
@l13
	%t32 =w call $printf(l $glo1, ...)
@l14
	%t36 =w loadw %n
	%t34 =w call $printf(l $glo2, w %t36, ...)
	%t38 =w loadw %c
	%t37 =w add %t38, 1
	storew %t37, %c
@l11
	%t40 =w loadw %n
	%t39 =w add %t40, 1
	storew %t39, %n
	jmp @l1
@l3
	%t41 =w call $printf(l $glo3, ...)
	ret 0
}

--- Output: size 1041 ---
export function $main() {
@l0
	%n.1 =l alloc4 4
	%t.2 =l alloc4 4
	%c.3 =l alloc4 4
	%p.4 =l alloc4 4
	storew 0, %c.3
	storew 2, %n.1
@l1
	%t5 =w load %n.1
	%t4 =w csltw %t5, 5000
	jnz %t4, @l2, @l3
@l2
	storew 2, %t.2
	storew 1, %p.4
@l4
	%t13 =w load %t.2
	%t14 =w load %t.2
	%t12 =w mul %t13, %t14
	%t15 =w load %n.1
	%t11 =w cslew %t12, %t15
	jnz %t11, @l5, @l6
@l5
	%t18 =w load %n.1
	%t19 =w load %t.2
	%t17 =w rem %t18, %t19
	%t16 =w ceqw %t17, 0
	jnz %t16, @l7, @l8
@l7
	storew 0, %p.4
@l8
	%t24 =w load %t.2
	%t23 =w add %t24, 1
	storew %t23, %t.2
	jmp @l4
@l6
	%t25 =w load %p.4
	jnz %t25, @l10, @l11
@l10
	%t26 =w load %c.3
	jnz %t26, @l16, @l14
@l16
	%t29 =w load %c.3
	%t28 =w rem %t29, 10
	%t27 =w ceqw %t28, 0
	jnz %t27, @l13, @l14
@l13
	argl $glo1
	%t32 =w vacall $printf
@l14
	%t36 =w load %n.1
	argl $glo2
	argw %t36
	%t34 =w vacall $printf
	%t38 =w load %c.3
	%t37 =w add %t38, 1
	storew %t37, %c.3
@l11
	%t40 =w load %n.1
	%t39 =w add %t40, 1
	storew %t39, %n.1
	jmp @l1
@l3
	argl $glo3
	%t41 =w vacall $printf
	retw 0
}

--- Correct: size 1041 ---
export function $main() {
@l0
	%n.1 =l alloc4 4
	%t.2 =l alloc4 4
	%c.3 =l alloc4 4
	%p.4 =l alloc4 4
	storew 0, %c.3
	storew 2, %n.1
@l1
	%t5 =w load %n.1
	%t4 =w csltw %t5, 5000
	jnz %t4, @l2, @l3
@l2
	storew 2, %t.2
	storew 1, %p.4
@l4
	%t13 =w load %t.2
	%t14 =w load %t.2
	%t12 =w mul %t13, %t14
	%t15 =w load %n.1
	%t11 =w cslew %t12, %t15
	jnz %t11, @l5, @l6
@l5
	%t18 =w load %n.1
	%t19 =w load %t.2
	%t17 =w rem %t18, %t19
	%t16 =w ceqw %t17, 0
	jnz %t16, @l7, @l8
@l7
	storew 0, %p.4
@l8
	%t24 =w load %t.2
	%t23 =w add %t24, 1
	storew %t23, %t.2
	jmp @l4
@l6
	%t25 =w load %p.4
	jnz %t25, @l10, @l11
@l10
	%t26 =w load %c.3
	jnz %t26, @l16, @l14
@l16
	%t29 =w load %c.3
	%t28 =w rem %t29, 10
	%t27 =w ceqw %t28, 0
	jnz %t27, @l13, @l14
@l13
	argl $glo1
	%t32 =w vacall $printf
@l14
	%t36 =w load %n.1
	argl $glo2
	argw %t36
	%t34 =w vacall $printf
	%t38 =w load %c.3
	%t37 =w add %t38, 1
	storew %t37, %c.3
@l11
	%t40 =w load %n.1
	%t39 =w add %t40, 1
	storew %t39, %n.1
	jmp @l1
@l3
	argl $glo3
	%t41 =w vacall $printf
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=7, maxvsz=34603008, maxrss=3493888, nvcsw=1, nivcsw=1 }
checker: { utime=0, stime=0, ptime=0, rtime=4, maxvsz=0, maxrss=1855488, nvcsw=1, nivcsw=1 }

====== Test #18 =======
--- Input: size 897 ---
export function w $print(w %t0, l %t1) {
@l0
	%Q =l alloc4 4
	storew %t0, %Q
	%t =l alloc8 8
	storel %t1, %t
	%x =l alloc4 4
	%y =l alloc4 4
	storew 0, %y
@l1
	%t5 =w loadw %y
	%t6 =w loadw %Q
	%t4 =w csltw %t5, %t6
	jnz %t4, @l2, @l3
@l2
	storew 0, %x
@l4
	%t10 =w loadw %x
	%t11 =w loadw %Q
	%t9 =w csltw %t10, %t11
	jnz %t9, @l5, @l6
@l5
	%t16 =l loadl %t
	%t17 =w loadw %x
	%t18 =l extsw %t17
	%t19 =l mul 8, %t18
	%t15 =l add %t16, %t19
	%t14 =l loadl %t15
	%t20 =w loadw %y
	%t21 =l extsw %t20
	%t22 =l mul 4, %t21
	%t13 =l add %t14, %t22
	%t12 =w loadw %t13
	jnz %t12, @l7, @l8
@l7
	%t23 =w call $printf(l $glo1, ...)
	jmp @l9
@l8
	%t25 =w call $printf(l $glo2, ...)
@l9
	%t28 =w loadw %x
	%t27 =w add %t28, 1
	storew %t27, %x
	jmp @l4
@l6
	%t29 =w call $printf(l $glo3, ...)
	%t32 =w loadw %y
	%t31 =w add %t32, 1
	storew %t31, %y
	jmp @l1
@l3
	%t33 =w call $printf(l $glo4, ...)
	ret 0
}

--- Output: size 935 ---
export function $print() {
@l0
	%t0 =w par
	%t1 =l par
	%Q.1 =l alloc4 4
	storew %t0, %Q.1
	%t.2 =l alloc8 8
	storel %t1, %t.2
	%x.3 =l alloc4 4
	%y.4 =l alloc4 4
	storew 0, %y.4
@l1
	%t5 =w load %y.4
	%t6 =w load %Q.1
	%t4 =w csltw %t5, %t6
	jnz %t4, @l2, @l3
@l2
	storew 0, %x.3
@l4
	%t10 =w load %x.3
	%t11 =w load %Q.1
	%t9 =w csltw %t10, %t11
	jnz %t9, @l5, @l6
@l5
	%t16 =l load %t.2
	%t17 =w load %x.3
	%t18 =l extsw %t17
	%t19 =l mul 8, %t18
	%t15 =l add %t16, %t19
	%t14 =l load %t15
	%t20 =w load %y.4
	%t21 =l extsw %t20
	%t22 =l mul 4, %t21
	%t13 =l add %t14, %t22
	%t12 =w load %t13
	jnz %t12, @l7, @l8
@l7
	argl $glo1
	%t23 =w vacall $printf
	jmp @l9
@l8
	argl $glo2
	%t25 =w vacall $printf
@l9
	%t28 =w load %x.3
	%t27 =w add %t28, 1
	storew %t27, %x.3
	jmp @l4
@l6
	argl $glo3
	%t29 =w vacall $printf
	%t32 =w load %y.4
	%t31 =w add %t32, 1
	storew %t31, %y.4
	jmp @l1
@l3
	argl $glo4
	%t33 =w vacall $printf
	retw 0
}

--- Correct: size 935 ---
export function $print() {
@l0
	%t0 =w par
	%t1 =l par
	%Q.1 =l alloc4 4
	storew %t0, %Q.1
	%t.2 =l alloc8 8
	storel %t1, %t.2
	%x.3 =l alloc4 4
	%y.4 =l alloc4 4
	storew 0, %y.4
@l1
	%t5 =w load %y.4
	%t6 =w load %Q.1
	%t4 =w csltw %t5, %t6
	jnz %t4, @l2, @l3
@l2
	storew 0, %x.3
@l4
	%t10 =w load %x.3
	%t11 =w load %Q.1
	%t9 =w csltw %t10, %t11
	jnz %t9, @l5, @l6
@l5
	%t16 =l load %t.2
	%t17 =w load %x.3
	%t18 =l extsw %t17
	%t19 =l mul 8, %t18
	%t15 =l add %t16, %t19
	%t14 =l load %t15
	%t20 =w load %y.4
	%t21 =l extsw %t20
	%t22 =l mul 4, %t21
	%t13 =l add %t14, %t22
	%t12 =w load %t13
	jnz %t12, @l7, @l8
@l7
	argl $glo1
	%t23 =w vacall $printf
	jmp @l9
@l8
	argl $glo2
	%t25 =w vacall $printf
@l9
	%t28 =w load %x.3
	%t27 =w add %t28, 1
	storew %t27, %x.3
	jmp @l4
@l6
	argl $glo3
	%t29 =w vacall $printf
	%t32 =w load %y.4
	%t31 =w add %t32, 1
	storew %t31, %y.4
	jmp @l1
@l3
	argl $glo4
	%t33 =w vacall $printf
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=9, maxvsz=34603008, maxrss=3698688, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=4 }

====== Test #19 =======
--- Input: size 3533 ---
export function w $chk(w %t0, w %t1, l %t2, w %t3) {
@l0
	%x =l alloc4 4
	storew %t0, %x
	%y =l alloc4 4
	storew %t1, %y
	%t =l alloc8 8
	storel %t2, %t
	%Q =l alloc4 4
	storew %t3, %Q
	%i =l alloc4 4
	%r =l alloc4 4
	storew 0, %i
	storew 0, %r
@l1
	%t8 =w loadw %i
	%t9 =w loadw %Q
	%t7 =w csltw %t8, %t9
	jnz %t7, @l2, @l3
@l2
	%t12 =w loadw %r
	%t17 =l loadl %t
	%t18 =w loadw %x
	%t19 =l extsw %t18
	%t20 =l mul 8, %t19
	%t16 =l add %t17, %t20
	%t15 =l loadl %t16
	%t21 =w loadw %i
	%t22 =l extsw %t21
	%t23 =l mul 4, %t22
	%t14 =l add %t15, %t23
	%t13 =w loadw %t14
	%t11 =w add %t12, %t13
	storew %t11, %r
	%t26 =w loadw %r
	%t31 =l loadl %t
	%t32 =w loadw %i
	%t33 =l extsw %t32
	%t34 =l mul 8, %t33
	%t30 =l add %t31, %t34
	%t29 =l loadl %t30
	%t35 =w loadw %y
	%t36 =l extsw %t35
	%t37 =l mul 4, %t36
	%t28 =l add %t29, %t37
	%t27 =w loadw %t28
	%t25 =w add %t26, %t27
	storew %t25, %r
	%t41 =w loadw %x
	%t42 =w loadw %i
	%t40 =w add %t41, %t42
	%t43 =w loadw %Q
	%t39 =w csltw %t40, %t43
	%t46 =w loadw %y
	%t47 =w loadw %i
	%t45 =w add %t46, %t47
	%t48 =w loadw %Q
	%t44 =w csltw %t45, %t48
	%t38 =w and %t39, %t44
	jnz %t38, @l4, @l5
@l4
	%t51 =w loadw %r
	%t56 =l loadl %t
	%t58 =w loadw %x
	%t59 =w loadw %i
	%t57 =w add %t58, %t59
	%t60 =l extsw %t57
	%t61 =l mul 8, %t60
	%t55 =l add %t56, %t61
	%t54 =l loadl %t55
	%t63 =w loadw %y
	%t64 =w loadw %i
	%t62 =w add %t63, %t64
	%t65 =l extsw %t62
	%t66 =l mul 4, %t65
	%t53 =l add %t54, %t66
	%t52 =w loadw %t53
	%t50 =w add %t51, %t52
	storew %t50, %r
@l5
	%t70 =w loadw %x
	%t71 =w loadw %i
	%t69 =w add %t70, %t71
	%t72 =w loadw %Q
	%t68 =w csltw %t69, %t72
	%t76 =w loadw %y
	%t77 =w loadw %i
	%t75 =w sub %t76, %t77
	%t73 =w cslew 0, %t75
	%t67 =w and %t68, %t73
	jnz %t67, @l7, @l8
@l7
	%t80 =w loadw %r
	%t85 =l loadl %t
	%t87 =w loadw %x
	%t88 =w loadw %i
	%t86 =w add %t87, %t88
	%t89 =l extsw %t86
	%t90 =l mul 8, %t89
	%t84 =l add %t85, %t90
	%t83 =l loadl %t84
	%t92 =w loadw %y
	%t93 =w loadw %i
	%t91 =w sub %t92, %t93
	%t94 =l extsw %t91
	%t95 =l mul 4, %t94
	%t82 =l add %t83, %t95
	%t81 =w loadw %t82
	%t79 =w add %t80, %t81
	storew %t79, %r
@l8
	%t100 =w loadw %x
	%t101 =w loadw %i
	%t99 =w sub %t100, %t101
	%t97 =w cslew 0, %t99
	%t104 =w loadw %y
	%t105 =w loadw %i
	%t103 =w add %t104, %t105
	%t106 =w loadw %Q
	%t102 =w csltw %t103, %t106
	%t96 =w and %t97, %t102
	jnz %t96, @l10, @l11
@l10
	%t109 =w loadw %r
	%t114 =l loadl %t
	%t116 =w loadw %x
	%t117 =w loadw %i
	%t115 =w sub %t116, %t117
	%t118 =l extsw %t115
	%t119 =l mul 8, %t118
	%t113 =l add %t114, %t119
	%t112 =l loadl %t113
	%t121 =w loadw %y
	%t122 =w loadw %i
	%t120 =w add %t121, %t122
	%t123 =l extsw %t120
	%t124 =l mul 4, %t123
	%t111 =l add %t112, %t124
	%t110 =w loadw %t111
	%t108 =w add %t109, %t110
	storew %t108, %r
@l11
	%t129 =w loadw %x
	%t130 =w loadw %i
	%t128 =w sub %t129, %t130
	%t126 =w cslew 0, %t128
	%t134 =w loadw %y
	%t135 =w loadw %i
	%t133 =w sub %t134, %t135
	%t131 =w cslew 0, %t133
	%t125 =w and %t126, %t131
	jnz %t125, @l13, @l14
@l13
	%t138 =w loadw %r
	%t143 =l loadl %t
	%t145 =w loadw %x
	%t146 =w loadw %i
	%t144 =w sub %t145, %t146
	%t147 =l extsw %t144
	%t148 =l mul 8, %t147
	%t142 =l add %t143, %t148
	%t141 =l loadl %t142
	%t150 =w loadw %y
	%t151 =w loadw %i
	%t149 =w sub %t150, %t151
	%t152 =l extsw %t149
	%t153 =l mul 4, %t152
	%t140 =l add %t141, %t153
	%t139 =w loadw %t140
	%t137 =w add %t138, %t139
	storew %t137, %r
@l14
	%t155 =w loadw %i
	%t154 =w add %t155, 1
	storew %t154, %i
	jmp @l1
@l3
	%t156 =w loadw %r
	ret %t156
}


--- Output: size 3635 ---
export function $chk() {
@l0
	%t0 =w par
	%t1 =w par
	%t2 =l par
	%t3 =w par
	%x.1 =l alloc4 4
	storew %t0, %x.1
	%y.2 =l alloc4 4
	storew %t1, %y.2
	%t.3 =l alloc8 8
	storel %t2, %t.3
	%Q.4 =l alloc4 4
	storew %t3, %Q.4
	%i.5 =l alloc4 4
	%r.6 =l alloc4 4
	storew 0, %i.5
	storew 0, %r.6
@l1
	%t8 =w load %i.5
	%t9 =w load %Q.4
	%t7 =w csltw %t8, %t9
	jnz %t7, @l2, @l3
@l2
	%t12 =w load %r.6
	%t17 =l load %t.3
	%t18 =w load %x.1
	%t19 =l extsw %t18
	%t20 =l mul 8, %t19
	%t16 =l add %t17, %t20
	%t15 =l load %t16
	%t21 =w load %i.5
	%t22 =l extsw %t21
	%t23 =l mul 4, %t22
	%t14 =l add %t15, %t23
	%t13 =w load %t14
	%t11 =w add %t12, %t13
	storew %t11, %r.6
	%t26 =w load %r.6
	%t31 =l load %t.3
	%t32 =w load %i.5
	%t33 =l extsw %t32
	%t34 =l mul 8, %t33
	%t30 =l add %t31, %t34
	%t29 =l load %t30
	%t35 =w load %y.2
	%t36 =l extsw %t35
	%t37 =l mul 4, %t36
	%t28 =l add %t29, %t37
	%t27 =w load %t28
	%t25 =w add %t26, %t27
	storew %t25, %r.6
	%t41 =w load %x.1
	%t42 =w load %i.5
	%t40 =w add %t41, %t42
	%t43 =w load %Q.4
	%t39 =w csltw %t40, %t43
	%t46 =w load %y.2
	%t47 =w load %i.5
	%t45 =w add %t46, %t47
	%t48 =w load %Q.4
	%t44 =w csltw %t45, %t48
	%t38 =w and %t39, %t44
	jnz %t38, @l4, @l5
@l4
	%t51 =w load %r.6
	%t56 =l load %t.3
	%t58 =w load %x.1
	%t59 =w load %i.5
	%t57 =w add %t58, %t59
	%t60 =l extsw %t57
	%t61 =l mul 8, %t60
	%t55 =l add %t56, %t61
	%t54 =l load %t55
	%t63 =w load %y.2
	%t64 =w load %i.5
	%t62 =w add %t63, %t64
	%t65 =l extsw %t62
	%t66 =l mul 4, %t65
	%t53 =l add %t54, %t66
	%t52 =w load %t53
	%t50 =w add %t51, %t52
	storew %t50, %r.6
@l5
	%t70 =w load %x.1
	%t71 =w load %i.5
	%t69 =w add %t70, %t71
	%t72 =w load %Q.4
	%t68 =w csltw %t69, %t72
	%t76 =w load %y.2
	%t77 =w load %i.5
	%t75 =w sub %t76, %t77
	%t73 =w cslew 0, %t75
	%t67 =w and %t68, %t73
	jnz %t67, @l7, @l8
@l7
	%t80 =w load %r.6
	%t85 =l load %t.3
	%t87 =w load %x.1
	%t88 =w load %i.5
	%t86 =w add %t87, %t88
	%t89 =l extsw %t86
	%t90 =l mul 8, %t89
	%t84 =l add %t85, %t90
	%t83 =l load %t84
	%t92 =w load %y.2
	%t93 =w load %i.5
	%t91 =w sub %t92, %t93
	%t94 =l extsw %t91
	%t95 =l mul 4, %t94
	%t82 =l add %t83, %t95
	%t81 =w load %t82
	%t79 =w add %t80, %t81
	storew %t79, %r.6
@l8
	%t100 =w load %x.1
	%t101 =w load %i.5
	%t99 =w sub %t100, %t101
	%t97 =w cslew 0, %t99
	%t104 =w load %y.2
	%t105 =w load %i.5
	%t103 =w add %t104, %t105
	%t106 =w load %Q.4
	%t102 =w csltw %t103, %t106
	%t96 =w and %t97, %t102
	jnz %t96, @l10, @l11
@l10
	%t109 =w load %r.6
	%t114 =l load %t.3
	%t116 =w load %x.1
	%t117 =w load %i.5
	%t115 =w sub %t116, %t117
	%t118 =l extsw %t115
	%t119 =l mul 8, %t118
	%t113 =l add %t114, %t119
	%t112 =l load %t113
	%t121 =w load %y.2
	%t122 =w load %i.5
	%t120 =w add %t121, %t122
	%t123 =l extsw %t120
	%t124 =l mul 4, %t123
	%t111 =l add %t112, %t124
	%t110 =w load %t111
	%t108 =w add %t109, %t110
	storew %t108, %r.6
@l11
	%t129 =w load %x.1
	%t130 =w load %i.5
	%t128 =w sub %t129, %t130
	%t126 =w cslew 0, %t128
	%t134 =w load %y.2
	%t135 =w load %i.5
	%t133 =w sub %t134, %t135
	%t131 =w cslew 0, %t133
	%t125 =w and %t126, %t131
	jnz %t125, @l13, @l14
@l13
	%t138 =w load %r.6
	%t143 =l load %t.3
	%t145 =w load %x.1
	%t146 =w load %i.5
	%t144 =w sub %t145, %t146
	%t147 =l extsw %t144
	%t148 =l mul 8, %t147
	%t142 =l add %t143, %t148
	%t141 =l load %t142
	%t150 =w load %y.2
	%t151 =w load %i.5
	%t149 =w sub %t150, %t151
	%t152 =l extsw %t149
	%t153 =l mul 4, %t152
	%t140 =l add %t141, %t153
	%t139 =w load %t140
	%t137 =w add %t138, %t139
	storew %t137, %r.6
@l14
	%t155 =w load %i.5
	%t154 =w add %t155, 1
	storew %t154, %i.5
	jmp @l1
@l3
	%t156 =w load %r.6
	retw %t156
}

--- Correct: size 3635 ---
export function $chk() {
@l0
	%t0 =w par
	%t1 =w par
	%t2 =l par
	%t3 =w par
	%x.1 =l alloc4 4
	storew %t0, %x.1
	%y.2 =l alloc4 4
	storew %t1, %y.2
	%t.3 =l alloc8 8
	storel %t2, %t.3
	%Q.4 =l alloc4 4
	storew %t3, %Q.4
	%i.5 =l alloc4 4
	%r.6 =l alloc4 4
	storew 0, %i.5
	storew 0, %r.6
@l1
	%t8 =w load %i.5
	%t9 =w load %Q.4
	%t7 =w csltw %t8, %t9
	jnz %t7, @l2, @l3
@l2
	%t12 =w load %r.6
	%t17 =l load %t.3
	%t18 =w load %x.1
	%t19 =l extsw %t18
	%t20 =l mul 8, %t19
	%t16 =l add %t17, %t20
	%t15 =l load %t16
	%t21 =w load %i.5
	%t22 =l extsw %t21
	%t23 =l mul 4, %t22
	%t14 =l add %t15, %t23
	%t13 =w load %t14
	%t11 =w add %t12, %t13
	storew %t11, %r.6
	%t26 =w load %r.6
	%t31 =l load %t.3
	%t32 =w load %i.5
	%t33 =l extsw %t32
	%t34 =l mul 8, %t33
	%t30 =l add %t31, %t34
	%t29 =l load %t30
	%t35 =w load %y.2
	%t36 =l extsw %t35
	%t37 =l mul 4, %t36
	%t28 =l add %t29, %t37
	%t27 =w load %t28
	%t25 =w add %t26, %t27
	storew %t25, %r.6
	%t41 =w load %x.1
	%t42 =w load %i.5
	%t40 =w add %t41, %t42
	%t43 =w load %Q.4
	%t39 =w csltw %t40, %t43
	%t46 =w load %y.2
	%t47 =w load %i.5
	%t45 =w add %t46, %t47
	%t48 =w load %Q.4
	%t44 =w csltw %t45, %t48
	%t38 =w and %t39, %t44
	jnz %t38, @l4, @l5
@l4
	%t51 =w load %r.6
	%t56 =l load %t.3
	%t58 =w load %x.1
	%t59 =w load %i.5
	%t57 =w add %t58, %t59
	%t60 =l extsw %t57
	%t61 =l mul 8, %t60
	%t55 =l add %t56, %t61
	%t54 =l load %t55
	%t63 =w load %y.2
	%t64 =w load %i.5
	%t62 =w add %t63, %t64
	%t65 =l extsw %t62
	%t66 =l mul 4, %t65
	%t53 =l add %t54, %t66
	%t52 =w load %t53
	%t50 =w add %t51, %t52
	storew %t50, %r.6
@l5
	%t70 =w load %x.1
	%t71 =w load %i.5
	%t69 =w add %t70, %t71
	%t72 =w load %Q.4
	%t68 =w csltw %t69, %t72
	%t76 =w load %y.2
	%t77 =w load %i.5
	%t75 =w sub %t76, %t77
	%t73 =w cslew 0, %t75
	%t67 =w and %t68, %t73
	jnz %t67, @l7, @l8
@l7
	%t80 =w load %r.6
	%t85 =l load %t.3
	%t87 =w load %x.1
	%t88 =w load %i.5
	%t86 =w add %t87, %t88
	%t89 =l extsw %t86
	%t90 =l mul 8, %t89
	%t84 =l add %t85, %t90
	%t83 =l load %t84
	%t92 =w load %y.2
	%t93 =w load %i.5
	%t91 =w sub %t92, %t93
	%t94 =l extsw %t91
	%t95 =l mul 4, %t94
	%t82 =l add %t83, %t95
	%t81 =w load %t82
	%t79 =w add %t80, %t81
	storew %t79, %r.6
@l8
	%t100 =w load %x.1
	%t101 =w load %i.5
	%t99 =w sub %t100, %t101
	%t97 =w cslew 0, %t99
	%t104 =w load %y.2
	%t105 =w load %i.5
	%t103 =w add %t104, %t105
	%t106 =w load %Q.4
	%t102 =w csltw %t103, %t106
	%t96 =w and %t97, %t102
	jnz %t96, @l10, @l11
@l10
	%t109 =w load %r.6
	%t114 =l load %t.3
	%t116 =w load %x.1
	%t117 =w load %i.5
	%t115 =w sub %t116, %t117
	%t118 =l extsw %t115
	%t119 =l mul 8, %t118
	%t113 =l add %t114, %t119
	%t112 =l load %t113
	%t121 =w load %y.2
	%t122 =w load %i.5
	%t120 =w add %t121, %t122
	%t123 =l extsw %t120
	%t124 =l mul 4, %t123
	%t111 =l add %t112, %t124
	%t110 =w load %t111
	%t108 =w add %t109, %t110
	storew %t108, %r.6
@l11
	%t129 =w load %x.1
	%t130 =w load %i.5
	%t128 =w sub %t129, %t130
	%t126 =w cslew 0, %t128
	%t134 =w load %y.2
	%t135 =w load %i.5
	%t133 =w sub %t134, %t135
	%t131 =w cslew 0, %t133
	%t125 =w and %t126, %t131
	jnz %t125, @l13, @l14
@l13
	%t138 =w load %r.6
	%t143 =l load %t.3
	%t145 =w load %x.1
	%t146 =w load %i.5
	%t144 =w sub %t145, %t146
	%t147 =l extsw %t144
	%t148 =l mul 8, %t147
	%t142 =l add %t143, %t148
	%t141 =l load %t142
	%t150 =w load %y.2
	%t151 =w load %i.5
	%t149 =w sub %t150, %t151
	%t152 =l extsw %t149
	%t153 =l mul 4, %t152
	%t140 =l add %t141, %t153
	%t139 =w load %t140
	%t137 =w add %t138, %t139
	storew %t137, %r.6
@l14
	%t155 =w load %i.5
	%t154 =w add %t155, 1
	storew %t154, %i.5
	jmp @l1
@l3
	%t156 =w load %r.6
	retw %t156
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=8, stime=0, ptime=8, rtime=10, maxvsz=21696512, maxrss=3530752, nvcsw=1, nivcsw=4 }
checker: { utime=0, stime=0, ptime=0, rtime=4, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=3 }

====== Test #20 =======
--- Input: size 1274 ---
export function w $go(w %t0, w %t1, l %t2, w %t3) {
@l0
	%y =l alloc4 4
	storew %t0, %y
	%Q =l alloc4 4
	storew %t1, %Q
	%t =l alloc8 8
	storel %t2, %t
	%N =l alloc4 4
	storew %t3, %N
	%x =l alloc4 4
	%t5 =w loadw %y
	%t6 =w loadw %Q
	%t4 =w ceqw %t5, %t6
	jnz %t4, @l1, @l2
@l1
	%t7 =w call $print(...)
	%t9 =w loadw %N
	%t8 =w add %t9, 1
	storew %t8, %N
	ret 0
@l2
	storew 0, %x
@l4
	%t14 =w loadw %x
	%t15 =w loadw %Q
	%t13 =w csltw %t14, %t15
	jnz %t13, @l5, @l6
@l5
	%t18 =w loadw %x
	%t19 =w loadw %y
	%t17 =w call $chk(w %t18, w %t19, ...)
	%t16 =w ceqw %t17, 0
	jnz %t16, @l7, @l8
@l7
	%t25 =l loadl %t
	%t26 =w loadw %x
	%t27 =l extsw %t26
	%t28 =l mul 8, %t27
	%t24 =l add %t25, %t28
	%t23 =l loadl %t24
	%t29 =w loadw %y
	%t30 =l extsw %t29
	%t31 =l mul 4, %t30
	%t22 =l add %t23, %t31
	%t32 =w loadw %t22
	%t21 =w add %t32, 1
	storew %t21, %t22
	%t35 =w loadw %y
	%t34 =w add %t35, 1
	%t33 =w call $go(w %t34, ...)
	%t41 =l loadl %t
	%t42 =w loadw %x
	%t43 =l extsw %t42
	%t44 =l mul 8, %t43
	%t40 =l add %t41, %t44
	%t39 =l loadl %t40
	%t45 =w loadw %y
	%t46 =l extsw %t45
	%t47 =l mul 4, %t46
	%t38 =l add %t39, %t47
	%t48 =w loadw %t38
	%t37 =w sub %t48, 1
	storew %t37, %t38
@l8
	%t50 =w loadw %x
	%t49 =w add %t50, 1
	storew %t49, %x
	jmp @l4
@l6
	ret 0
}


--- Output: size 1330 ---
export function $go() {
@l0
	%t0 =w par
	%t1 =w par
	%t2 =l par
	%t3 =w par
	%y.1 =l alloc4 4
	storew %t0, %y.1
	%Q.2 =l alloc4 4
	storew %t1, %Q.2
	%t.3 =l alloc8 8
	storel %t2, %t.3
	%N.4 =l alloc4 4
	storew %t3, %N.4
	%x.5 =l alloc4 4
	%t5 =w load %y.1
	%t6 =w load %Q.2
	%t4 =w ceqw %t5, %t6
	jnz %t4, @l1, @l2
@l1
	%t7 =w vacall $print
	%t9 =w load %N.4
	%t8 =w add %t9, 1
	storew %t8, %N.4
	retw 0
@l2
	storew 0, %x.5
@l4
	%t14 =w load %x.5
	%t15 =w load %Q.2
	%t13 =w csltw %t14, %t15
	jnz %t13, @l5, @l6
@l5
	%t18 =w load %x.5
	%t19 =w load %y.1
	argw %t18
	argw %t19
	%t17 =w vacall $chk
	%t16 =w ceqw %t17, 0
	jnz %t16, @l7, @l8
@l7
	%t25 =l load %t.3
	%t26 =w load %x.5
	%t27 =l extsw %t26
	%t28 =l mul 8, %t27
	%t24 =l add %t25, %t28
	%t23 =l load %t24
	%t29 =w load %y.1
	%t30 =l extsw %t29
	%t31 =l mul 4, %t30
	%t22 =l add %t23, %t31
	%t32 =w load %t22
	%t21 =w add %t32, 1
	storew %t21, %t22
	%t35 =w load %y.1
	%t34 =w add %t35, 1
	argw %t34
	%t33 =w vacall $go
	%t41 =l load %t.3
	%t42 =w load %x.5
	%t43 =l extsw %t42
	%t44 =l mul 8, %t43
	%t40 =l add %t41, %t44
	%t39 =l load %t40
	%t45 =w load %y.1
	%t46 =l extsw %t45
	%t47 =l mul 4, %t46
	%t38 =l add %t39, %t47
	%t48 =w load %t38
	%t37 =w sub %t48, 1
	storew %t37, %t38
@l8
	%t50 =w load %x.5
	%t49 =w add %t50, 1
	storew %t49, %x.5
	jmp @l4
@l6
	retw 0
}

--- Correct: size 1330 ---
export function $go() {
@l0
	%t0 =w par
	%t1 =w par
	%t2 =l par
	%t3 =w par
	%y.1 =l alloc4 4
	storew %t0, %y.1
	%Q.2 =l alloc4 4
	storew %t1, %Q.2
	%t.3 =l alloc8 8
	storel %t2, %t.3
	%N.4 =l alloc4 4
	storew %t3, %N.4
	%x.5 =l alloc4 4
	%t5 =w load %y.1
	%t6 =w load %Q.2
	%t4 =w ceqw %t5, %t6
	jnz %t4, @l1, @l2
@l1
	%t7 =w vacall $print
	%t9 =w load %N.4
	%t8 =w add %t9, 1
	storew %t8, %N.4
	retw 0
@l2
	storew 0, %x.5
@l4
	%t14 =w load %x.5
	%t15 =w load %Q.2
	%t13 =w csltw %t14, %t15
	jnz %t13, @l5, @l6
@l5
	%t18 =w load %x.5
	%t19 =w load %y.1
	argw %t18
	argw %t19
	%t17 =w vacall $chk
	%t16 =w ceqw %t17, 0
	jnz %t16, @l7, @l8
@l7
	%t25 =l load %t.3
	%t26 =w load %x.5
	%t27 =l extsw %t26
	%t28 =l mul 8, %t27
	%t24 =l add %t25, %t28
	%t23 =l load %t24
	%t29 =w load %y.1
	%t30 =l extsw %t29
	%t31 =l mul 4, %t30
	%t22 =l add %t23, %t31
	%t32 =w load %t22
	%t21 =w add %t32, 1
	storew %t21, %t22
	%t35 =w load %y.1
	%t34 =w add %t35, 1
	argw %t34
	%t33 =w vacall $go
	%t41 =l load %t.3
	%t42 =w load %x.5
	%t43 =l extsw %t42
	%t44 =l mul 8, %t43
	%t40 =l add %t41, %t44
	%t39 =l load %t40
	%t45 =w load %y.1
	%t46 =l extsw %t45
	%t47 =l mul 4, %t46
	%t38 =l add %t39, %t47
	%t48 =w load %t38
	%t37 =w sub %t48, 1
	storew %t37, %t38
@l8
	%t50 =w load %x.5
	%t49 =w add %t50, 1
	storew %t49, %x.5
	jmp @l4
@l6
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=6, maxvsz=21696512, maxrss=3440640, nvcsw=1, nivcsw=3 }
checker: { utime=0, stime=0, ptime=0, rtime=4, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #21 =======
--- Input: size 843 ---
export function w $main(w %t0, l %t1, w %t2, w %t3) {
@l0
	%ac =l alloc4 4
	storew %t0, %ac
	%av =l alloc8 8
	storel %t1, %av
	%Q =l alloc4 4
	storew %t2, %Q
	%N =l alloc4 4
	storew %t3, %N
	%i =l alloc4 4
	%t =l alloc8 8
	storew 8, %Q
	%t8 =w loadw %ac
	%t6 =w cslew 2, %t8
	jnz %t6, @l1, @l2
@l1
	%t13 =l loadl %av
	%t12 =l add %t13, 8
	%t11 =l loadl %t12
	%t10 =w call $atoi(l %t11, ...)
	storew %t10, %Q
@l2
	storew 0, %i
@l4
	%t18 =w loadw %i
	%t19 =w loadw %Q
	%t17 =w csltw %t18, %t19
	jnz %t17, @l5, @l6
@l5
	%t22 =w loadw %Q
	%t21 =w mul %t22, 4
	%t25 =l loadl %t
	%t26 =w loadw %i
	%t27 =l extsw %t26
	%t28 =l mul 4, %t27
	%t24 =l add %t25, %t28
	storew %t21, %t24
	%t30 =w loadw %i
	%t29 =w add %t30, 1
	storew %t29, %i
	jmp @l4
@l6
	%t31 =w call $go(w 0, ...)
	%t35 =w loadw %N
	%t33 =w call $printf(l $glo1, w %t35, ...)
	ret 0
}

--- Output: size 897 ---
export function $main() {
@l0
	%t0 =w par
	%t1 =l par
	%t2 =w par
	%t3 =w par
	%ac =l alloc4 4
	storew %t0, %ac
	%av.1 =l alloc8 8
	storel %t1, %av.1
	%Q.2 =l alloc4 4
	storew %t2, %Q.2
	%N.3 =l alloc4 4
	storew %t3, %N.3
	%i.4 =l alloc4 4
	%t.5 =l alloc8 8
	storew 8, %Q.2
	%t8 =w load %ac
	%t6 =w cslew 2, %t8
	jnz %t6, @l1, @l2
@l1
	%t13 =l load %av.1
	%t12 =l add %t13, 8
	%t11 =l load %t12
	argl %t11
	%t10 =w vacall $atoi
	storew %t10, %Q.2
@l2
	storew 0, %i.4
@l4
	%t18 =w load %i.4
	%t19 =w load %Q.2
	%t17 =w csltw %t18, %t19
	jnz %t17, @l5, @l6
@l5
	%t22 =w load %Q.2
	%t21 =w mul %t22, 4
	%t25 =l load %t.5
	%t26 =w load %i.4
	%t27 =l extsw %t26
	%t28 =l mul 4, %t27
	%t24 =l add %t25, %t28
	storew %t21, %t24
	%t30 =w load %i.4
	%t29 =w add %t30, 1
	storew %t29, %i.4
	jmp @l4
@l6
	argw 0
	%t31 =w vacall $go
	%t35 =w load %N.3
	argl $glo1
	argw %t35
	%t33 =w vacall $printf
	retw 0
}

--- Correct: size 897 ---
export function $main() {
@l0
	%t0 =w par
	%t1 =l par
	%t2 =w par
	%t3 =w par
	%ac =l alloc4 4
	storew %t0, %ac
	%av.1 =l alloc8 8
	storel %t1, %av.1
	%Q.2 =l alloc4 4
	storew %t2, %Q.2
	%N.3 =l alloc4 4
	storew %t3, %N.3
	%i.4 =l alloc4 4
	%t.5 =l alloc8 8
	storew 8, %Q.2
	%t8 =w load %ac
	%t6 =w cslew 2, %t8
	jnz %t6, @l1, @l2
@l1
	%t13 =l load %av.1
	%t12 =l add %t13, 8
	%t11 =l load %t12
	argl %t11
	%t10 =w vacall $atoi
	storew %t10, %Q.2
@l2
	storew 0, %i.4
@l4
	%t18 =w load %i.4
	%t19 =w load %Q.2
	%t17 =w csltw %t18, %t19
	jnz %t17, @l5, @l6
@l5
	%t22 =w load %Q.2
	%t21 =w mul %t22, 4
	%t25 =l load %t.5
	%t26 =w load %i.4
	%t27 =l extsw %t26
	%t28 =l mul 4, %t27
	%t24 =l add %t25, %t28
	storew %t21, %t24
	%t30 =w load %i.4
	%t29 =w add %t30, 1
	storew %t29, %i.4
	jmp @l4
@l6
	argw 0
	%t31 =w vacall $go
	%t35 =w load %N.3
	argl $glo1
	argw %t35
	%t33 =w vacall $printf
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=6, maxvsz=21696512, maxrss=3497984, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=4, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=3 }

====== Test #22 =======
--- Input: size 1324 ---
export function w $main() {
@l0
	%n =l alloc4 4
	%nv =l alloc4 4
	%c =l alloc4 4
	%cmax =l alloc4 4
	%mem =l alloc8 8
	storew 0, %cmax
	storew 1, %nv
@l1
	%t5 =w loadw %nv
	%t4 =w csltw %t5, 10
	jnz %t4, @l2, @l3
@l2
	%t8 =w loadw %nv
	storew %t8, %n
	storew 0, %c
@l4
	%t12 =w loadw %n
	%t11 =w cnew %t12, 1
	jnz %t11, @l5, @l6
@l5
	%t15 =w loadw %n
	%t16 =w loadw %nv
	%t14 =w csltw %t15, %t16
	jnz %t14, @l7, @l8
@l7
	%t19 =w loadw %c
	%t22 =l loadl %mem
	%t23 =w loadw %n
	%t24 =l extsw %t23
	%t25 =l mul 4, %t24
	%t21 =l add %t22, %t25
	%t20 =w loadw %t21
	%t18 =w add %t19, %t20
	storew %t18, %c
	jmp @l6
@l8
	%t27 =w loadw %n
	%t26 =w and %t27, 1
	jnz %t26, @l10, @l11
@l10
	%t33 =w loadw %n
	%t31 =w mul 3, %t33
	%t30 =w add %t31, 1
	storew %t30, %n
	jmp @l12
@l11
	%t37 =w loadw %n
	%t36 =w div %t37, 2
	storew %t36, %n
@l12
	%t40 =w loadw %c
	%t39 =w add %t40, 1
	storew %t39, %c
	jmp @l4
@l6
	%t42 =w loadw %c
	%t44 =l loadl %mem
	%t45 =w loadw %nv
	%t46 =l extsw %t45
	%t47 =l mul 4, %t46
	%t43 =l add %t44, %t47
	storew %t42, %t43
	%t49 =w loadw %cmax
	%t50 =w loadw %c
	%t48 =w csltw %t49, %t50
	jnz %t48, @l13, @l14
@l13
	%t52 =w loadw %c
	storew %t52, %cmax
@l14
	%t54 =w loadw %nv
	%t53 =w add %t54, 1
	storew %t53, %nv
	jmp @l1
@l3
	%t57 =w loadw %cmax
	%t55 =w call $printf(l $glo1, w %t57, ...)
	ret 0
}

--- Output: size 1375 ---
export function $main() {
@l0
	%n.1 =l alloc4 4
	%nv.2 =l alloc4 4
	%c.3 =l alloc4 4
	%cmax.4 =l alloc4 4
	%mem.5 =l alloc8 8
	storew 0, %cmax.4
	storew 1, %nv.2
@l1
	%t5 =w load %nv.2
	%t4 =w csltw %t5, 10
	jnz %t4, @l2, @l3
@l2
	%t8 =w load %nv.2
	storew %t8, %n.1
	storew 0, %c.3
@l4
	%t12 =w load %n.1
	%t11 =w cnew %t12, 1
	jnz %t11, @l5, @l6
@l5
	%t15 =w load %n.1
	%t16 =w load %nv.2
	%t14 =w csltw %t15, %t16
	jnz %t14, @l7, @l8
@l7
	%t19 =w load %c.3
	%t22 =l load %mem.5
	%t23 =w load %n.1
	%t24 =l extsw %t23
	%t25 =l mul 4, %t24
	%t21 =l add %t22, %t25
	%t20 =w load %t21
	%t18 =w add %t19, %t20
	storew %t18, %c.3
	jmp @l6
@l8
	%t27 =w load %n.1
	%t26 =w and %t27, 1
	jnz %t26, @l10, @l11
@l10
	%t33 =w load %n.1
	%t31 =w mul 3, %t33
	%t30 =w add %t31, 1
	storew %t30, %n.1
	jmp @l12
@l11
	%t37 =w load %n.1
	%t36 =w div %t37, 2
	storew %t36, %n.1
@l12
	%t40 =w load %c.3
	%t39 =w add %t40, 1
	storew %t39, %c.3
	jmp @l4
@l6
	%t42 =w load %c.3
	%t44 =l load %mem.5
	%t45 =w load %nv.2
	%t46 =l extsw %t45
	%t47 =l mul 4, %t46
	%t43 =l add %t44, %t47
	storew %t42, %t43
	%t49 =w load %cmax.4
	%t50 =w load %c.3
	%t48 =w csltw %t49, %t50
	jnz %t48, @l13, @l14
@l13
	%t52 =w load %c.3
	storew %t52, %cmax.4
@l14
	%t54 =w load %nv.2
	%t53 =w add %t54, 1
	storew %t53, %nv.2
	jmp @l1
@l3
	%t57 =w load %cmax.4
	argl $glo1
	argw %t57
	%t55 =w vacall $printf
	retw 0
}

--- Correct: size 1375 ---
export function $main() {
@l0
	%n.1 =l alloc4 4
	%nv.2 =l alloc4 4
	%c.3 =l alloc4 4
	%cmax.4 =l alloc4 4
	%mem.5 =l alloc8 8
	storew 0, %cmax.4
	storew 1, %nv.2
@l1
	%t5 =w load %nv.2
	%t4 =w csltw %t5, 10
	jnz %t4, @l2, @l3
@l2
	%t8 =w load %nv.2
	storew %t8, %n.1
	storew 0, %c.3
@l4
	%t12 =w load %n.1
	%t11 =w cnew %t12, 1
	jnz %t11, @l5, @l6
@l5
	%t15 =w load %n.1
	%t16 =w load %nv.2
	%t14 =w csltw %t15, %t16
	jnz %t14, @l7, @l8
@l7
	%t19 =w load %c.3
	%t22 =l load %mem.5
	%t23 =w load %n.1
	%t24 =l extsw %t23
	%t25 =l mul 4, %t24
	%t21 =l add %t22, %t25
	%t20 =w load %t21
	%t18 =w add %t19, %t20
	storew %t18, %c.3
	jmp @l6
@l8
	%t27 =w load %n.1
	%t26 =w and %t27, 1
	jnz %t26, @l10, @l11
@l10
	%t33 =w load %n.1
	%t31 =w mul 3, %t33
	%t30 =w add %t31, 1
	storew %t30, %n.1
	jmp @l12
@l11
	%t37 =w load %n.1
	%t36 =w div %t37, 2
	storew %t36, %n.1
@l12
	%t40 =w load %c.3
	%t39 =w add %t40, 1
	storew %t39, %c.3
	jmp @l4
@l6
	%t42 =w load %c.3
	%t44 =l load %mem.5
	%t45 =w load %nv.2
	%t46 =l extsw %t45
	%t47 =l mul 4, %t46
	%t43 =l add %t44, %t47
	storew %t42, %t43
	%t49 =w load %cmax.4
	%t50 =w load %c.3
	%t48 =w csltw %t49, %t50
	jnz %t48, @l13, @l14
@l13
	%t52 =w load %c.3
	storew %t52, %cmax.4
@l14
	%t54 =w load %nv.2
	%t53 =w add %t54, 1
	storew %t53, %nv.2
	jmp @l1
@l3
	%t57 =w load %cmax.4
	argl $glo1
	argw %t57
	%t55 =w vacall $printf
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=7, maxvsz=21696512, maxrss=3604480, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=4, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=3 }

====== Test #23 =======
--- Input: size 1359 ---
export function w $main() {
@l0
	%i =l alloc4 4
	%a =l alloc4 4
	%b =l alloc4 4
	%c =l alloc4 4
	%d =l alloc4 4
	storew 1, %a
@l1
	%t3 =w loadw %a
	%t2 =w csltw %t3, 1000
	jnz %t2, @l2, @l3
@l2
	%t7 =w loadw %a
	%t6 =w add %t7, 1
	storew %t6, %b
@l4
	%t10 =w loadw %b
	%t9 =w csltw %t10, 1000
	jnz %t9, @l5, @l6
@l5
	%t15 =w loadw %a
	%t16 =w loadw %a
	%t14 =w mul %t15, %t16
	%t18 =w loadw %b
	%t19 =w loadw %b
	%t17 =w mul %t18, %t19
	%t13 =w add %t14, %t17
	storew %t13, %d
	storew 0, %i
@l7
	%t23 =w loadw %i
	%t22 =w csltw %t23, 1000
	jnz %t22, @l8, @l9
@l8
	%t27 =w loadw %i
	%t28 =w loadw %i
	%t26 =w mul %t27, %t28
	%t29 =w loadw %d
	%t25 =w ceqw %t26, %t29
	jnz %t25, @l10, @l11
@l10
	%t31 =w loadw %i
	storew %t31, %c
	%t33 =w loadw %b
	%t34 =w loadw %c
	%t32 =w csltw %t33, %t34
	jnz %t32, @l16, @l14
@l16
	%t38 =w loadw %a
	%t39 =w loadw %b
	%t37 =w add %t38, %t39
	%t40 =w loadw %c
	%t36 =w add %t37, %t40
	%t35 =w ceqw %t36, 1000
	jnz %t35, @l13, @l14
@l13
	%t46 =w loadw %a
	%t47 =w loadw %b
	%t45 =w mul %t46, %t47
	%t48 =w loadw %c
	%t44 =w mul %t45, %t48
	%t42 =w call $printf(l $glo1, w %t44, ...)
	ret 0
@l14
	jmp @l9
@l11
	%t51 =w loadw %i
	%t50 =w add %t51, 1
	storew %t50, %i
	jmp @l7
@l9
	%t53 =w loadw %b
	%t52 =w add %t53, 1
	storew %t52, %b
	jmp @l4
@l6
	%t55 =w loadw %a
	%t54 =w add %t55, 1
	storew %t54, %a
	jmp @l1
@l3
	ret 0
}

--- Output: size 1411 ---
export function $main() {
@l0
	%i.1 =l alloc4 4
	%a.2 =l alloc4 4
	%b.3 =l alloc4 4
	%c.4 =l alloc4 4
	%d.5 =l alloc4 4
	storew 1, %a.2
@l1
	%t3 =w load %a.2
	%t2 =w csltw %t3, 1000
	jnz %t2, @l2, @l3
@l2
	%t7 =w load %a.2
	%t6 =w add %t7, 1
	storew %t6, %b.3
@l4
	%t10 =w load %b.3
	%t9 =w csltw %t10, 1000
	jnz %t9, @l5, @l6
@l5
	%t15 =w load %a.2
	%t16 =w load %a.2
	%t14 =w mul %t15, %t16
	%t18 =w load %b.3
	%t19 =w load %b.3
	%t17 =w mul %t18, %t19
	%t13 =w add %t14, %t17
	storew %t13, %d.5
	storew 0, %i.1
@l7
	%t23 =w load %i.1
	%t22 =w csltw %t23, 1000
	jnz %t22, @l8, @l9
@l8
	%t27 =w load %i.1
	%t28 =w load %i.1
	%t26 =w mul %t27, %t28
	%t29 =w load %d.5
	%t25 =w ceqw %t26, %t29
	jnz %t25, @l10, @l11
@l10
	%t31 =w load %i.1
	storew %t31, %c.4
	%t33 =w load %b.3
	%t34 =w load %c.4
	%t32 =w csltw %t33, %t34
	jnz %t32, @l16, @l14
@l16
	%t38 =w load %a.2
	%t39 =w load %b.3
	%t37 =w add %t38, %t39
	%t40 =w load %c.4
	%t36 =w add %t37, %t40
	%t35 =w ceqw %t36, 1000
	jnz %t35, @l13, @l14
@l13
	%t46 =w load %a.2
	%t47 =w load %b.3
	%t45 =w mul %t46, %t47
	%t48 =w load %c.4
	%t44 =w mul %t45, %t48
	argl $glo1
	argw %t44
	%t42 =w vacall $printf
	retw 0
@l14
	jmp @l9
@l11
	%t51 =w load %i.1
	%t50 =w add %t51, 1
	storew %t50, %i.1
	jmp @l7
@l9
	%t53 =w load %b.3
	%t52 =w add %t53, 1
	storew %t52, %b.3
	jmp @l4
@l6
	%t55 =w load %a.2
	%t54 =w add %t55, 1
	storew %t54, %a.2
	jmp @l1
@l3
	retw 0
}

--- Correct: size 1411 ---
export function $main() {
@l0
	%i.1 =l alloc4 4
	%a.2 =l alloc4 4
	%b.3 =l alloc4 4
	%c.4 =l alloc4 4
	%d.5 =l alloc4 4
	storew 1, %a.2
@l1
	%t3 =w load %a.2
	%t2 =w csltw %t3, 1000
	jnz %t2, @l2, @l3
@l2
	%t7 =w load %a.2
	%t6 =w add %t7, 1
	storew %t6, %b.3
@l4
	%t10 =w load %b.3
	%t9 =w csltw %t10, 1000
	jnz %t9, @l5, @l6
@l5
	%t15 =w load %a.2
	%t16 =w load %a.2
	%t14 =w mul %t15, %t16
	%t18 =w load %b.3
	%t19 =w load %b.3
	%t17 =w mul %t18, %t19
	%t13 =w add %t14, %t17
	storew %t13, %d.5
	storew 0, %i.1
@l7
	%t23 =w load %i.1
	%t22 =w csltw %t23, 1000
	jnz %t22, @l8, @l9
@l8
	%t27 =w load %i.1
	%t28 =w load %i.1
	%t26 =w mul %t27, %t28
	%t29 =w load %d.5
	%t25 =w ceqw %t26, %t29
	jnz %t25, @l10, @l11
@l10
	%t31 =w load %i.1
	storew %t31, %c.4
	%t33 =w load %b.3
	%t34 =w load %c.4
	%t32 =w csltw %t33, %t34
	jnz %t32, @l16, @l14
@l16
	%t38 =w load %a.2
	%t39 =w load %b.3
	%t37 =w add %t38, %t39
	%t40 =w load %c.4
	%t36 =w add %t37, %t40
	%t35 =w ceqw %t36, 1000
	jnz %t35, @l13, @l14
@l13
	%t46 =w load %a.2
	%t47 =w load %b.3
	%t45 =w mul %t46, %t47
	%t48 =w load %c.4
	%t44 =w mul %t45, %t48
	argl $glo1
	argw %t44
	%t42 =w vacall $printf
	retw 0
@l14
	jmp @l9
@l11
	%t51 =w load %i.1
	%t50 =w add %t51, 1
	storew %t50, %i.1
	jmp @l7
@l9
	%t53 =w load %b.3
	%t52 =w add %t53, 1
	storew %t52, %b.3
	jmp @l4
@l6
	%t55 =w load %a.2
	%t54 =w add %t55, 1
	storew %t54, %a.2
	jmp @l1
@l3
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=8, maxvsz=21696512, maxrss=3448832, nvcsw=1, nivcsw=3 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #24 =======
--- Input: size 726 ---
export function w $board() {
@l0
	%x =l alloc4 4
	%y =l alloc4 4
	%b =l alloc8 8
	storew 0, %y
@l1
	%t3 =w loadw %y
	%t2 =w csltw %t3, 8
	jnz %t2, @l2, @l3
@l2
	storew 0, %x
@l4
	%t8 =w loadw %x
	%t7 =w csltw %t8, 8
	jnz %t7, @l5, @l6
@l5
	%t16 =l loadl %b
	%t17 =w loadw %x
	%t18 =l extsw %t17
	%t19 =l mul 8, %t18
	%t15 =l add %t16, %t19
	%t14 =l loadl %t15
	%t20 =w loadw %y
	%t21 =l extsw %t20
	%t22 =l mul 4, %t21
	%t13 =l add %t14, %t22
	%t12 =w loadw %t13
	%t10 =w call $printf(l $glo1, w %t12, ...)
	%t24 =w loadw %x
	%t23 =w add %t24, 1
	storew %t23, %x
	jmp @l4
@l6
	%t25 =w call $printf(l $glo2, ...)
	%t28 =w loadw %y
	%t27 =w add %t28, 1
	storew %t27, %y
	jmp @l1
@l3
	%t29 =w call $printf(l $glo3, ...)
	ret 0
}

--- Output: size 747 ---
export function $board() {
@l0
	%x.1 =l alloc4 4
	%y.2 =l alloc4 4
	%b.3 =l alloc8 8
	storew 0, %y.2
@l1
	%t3 =w load %y.2
	%t2 =w csltw %t3, 8
	jnz %t2, @l2, @l3
@l2
	storew 0, %x.1
@l4
	%t8 =w load %x.1
	%t7 =w csltw %t8, 8
	jnz %t7, @l5, @l6
@l5
	%t16 =l load %b.3
	%t17 =w load %x.1
	%t18 =l extsw %t17
	%t19 =l mul 8, %t18
	%t15 =l add %t16, %t19
	%t14 =l load %t15
	%t20 =w load %y.2
	%t21 =l extsw %t20
	%t22 =l mul 4, %t21
	%t13 =l add %t14, %t22
	%t12 =w load %t13
	argl $glo1
	argw %t12
	%t10 =w vacall $printf
	%t24 =w load %x.1
	%t23 =w add %t24, 1
	storew %t23, %x.1
	jmp @l4
@l6
	argl $glo2
	%t25 =w vacall $printf
	%t28 =w load %y.2
	%t27 =w add %t28, 1
	storew %t27, %y.2
	jmp @l1
@l3
	argl $glo3
	%t29 =w vacall $printf
	retw 0
}

--- Correct: size 747 ---
export function $board() {
@l0
	%x.1 =l alloc4 4
	%y.2 =l alloc4 4
	%b.3 =l alloc8 8
	storew 0, %y.2
@l1
	%t3 =w load %y.2
	%t2 =w csltw %t3, 8
	jnz %t2, @l2, @l3
@l2
	storew 0, %x.1
@l4
	%t8 =w load %x.1
	%t7 =w csltw %t8, 8
	jnz %t7, @l5, @l6
@l5
	%t16 =l load %b.3
	%t17 =w load %x.1
	%t18 =l extsw %t17
	%t19 =l mul 8, %t18
	%t15 =l add %t16, %t19
	%t14 =l load %t15
	%t20 =w load %y.2
	%t21 =l extsw %t20
	%t22 =l mul 4, %t21
	%t13 =l add %t14, %t22
	%t12 =w load %t13
	argl $glo1
	argw %t12
	%t10 =w vacall $printf
	%t24 =w load %x.1
	%t23 =w add %t24, 1
	storew %t23, %x.1
	jmp @l4
@l6
	argl $glo2
	%t25 =w vacall $printf
	%t28 =w load %y.2
	%t27 =w add %t28, 1
	storew %t27, %y.2
	jmp @l1
@l3
	argl $glo3
	%t29 =w vacall $printf
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=0, stime=4, ptime=4, rtime=6, maxvsz=21696512, maxrss=3543040, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #25 =======
--- Input: size 641 ---
export function w $chk(w %t0, w %t1) {
@l0
	%x =l alloc4 4
	storew %t0, %x
	%y =l alloc4 4
	storew %t1, %y
	%b =l alloc8 8
	%t3 =w loadw %x
	%t2 =w csltw %t3, 0
	jnz %t2, @l1, @l6
@l6
	%t7 =w loadw %x
	%t5 =w csltw 7, %t7
	jnz %t5, @l1, @l5
@l5
	%t9 =w loadw %y
	%t8 =w csltw %t9, 0
	jnz %t8, @l1, @l4
@l4
	%t13 =w loadw %y
	%t11 =w csltw 7, %t13
	jnz %t11, @l1, @l2
@l1
	ret 0
@l2
	%t20 =l loadl %b
	%t21 =w loadw %x
	%t22 =l extsw %t21
	%t23 =l mul 8, %t22
	%t19 =l add %t20, %t23
	%t18 =l loadl %t19
	%t24 =w loadw %y
	%t25 =l extsw %t24
	%t26 =l mul 4, %t25
	%t17 =l add %t18, %t26
	%t16 =w loadw %t17
	%t15 =w ceqw %t16, 0
	ret %t15
}


--- Output: size 667 ---
export function $chk() {
@l0
	%t0 =w par
	%t1 =w par
	%x.1 =l alloc4 4
	storew %t0, %x.1
	%y.2 =l alloc4 4
	storew %t1, %y.2
	%b.3 =l alloc8 8
	%t3 =w load %x.1
	%t2 =w csltw %t3, 0
	jnz %t2, @l1, @l6
@l6
	%t7 =w load %x.1
	%t5 =w csltw 7, %t7
	jnz %t5, @l1, @l5
@l5
	%t9 =w load %y.2
	%t8 =w csltw %t9, 0
	jnz %t8, @l1, @l4
@l4
	%t13 =w load %y.2
	%t11 =w csltw 7, %t13
	jnz %t11, @l1, @l2
@l1
	retw 0
@l2
	%t20 =l load %b.3
	%t21 =w load %x.1
	%t22 =l extsw %t21
	%t23 =l mul 8, %t22
	%t19 =l add %t20, %t23
	%t18 =l load %t19
	%t24 =w load %y.2
	%t25 =l extsw %t24
	%t26 =l mul 4, %t25
	%t17 =l add %t18, %t26
	%t16 =w load %t17
	%t15 =w ceqw %t16, 0
	retw %t15
}

--- Correct: size 667 ---
export function $chk() {
@l0
	%t0 =w par
	%t1 =w par
	%x.1 =l alloc4 4
	storew %t0, %x.1
	%y.2 =l alloc4 4
	storew %t1, %y.2
	%b.3 =l alloc8 8
	%t3 =w load %x.1
	%t2 =w csltw %t3, 0
	jnz %t2, @l1, @l6
@l6
	%t7 =w load %x.1
	%t5 =w csltw 7, %t7
	jnz %t5, @l1, @l5
@l5
	%t9 =w load %y.2
	%t8 =w csltw %t9, 0
	jnz %t8, @l1, @l4
@l4
	%t13 =w load %y.2
	%t11 =w csltw 7, %t13
	jnz %t11, @l1, @l2
@l1
	retw 0
@l2
	%t20 =l load %b.3
	%t21 =w load %x.1
	%t22 =l extsw %t21
	%t23 =l mul 8, %t22
	%t19 =l add %t20, %t23
	%t18 =l load %t19
	%t24 =w load %y.2
	%t25 =l extsw %t24
	%t26 =l mul 4, %t25
	%t17 =l add %t18, %t26
	%t16 =w load %t17
	%t15 =w ceqw %t16, 0
	retw %t15
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=6, maxvsz=21696512, maxrss=3469312, nvcsw=1, nivcsw=3 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #26 =======
--- Input: size 2185 ---
export function w $go(w %t0, w %t1, w %t2) {
@l0
	%k =l alloc4 4
	storew %t0, %k
	%x =l alloc4 4
	storew %t1, %x
	%y =l alloc4 4
	storew %t2, %y
	%i =l alloc4 4
	%j =l alloc4 4
	%b =l alloc8 8
	%N =l alloc4 4
	%t4 =w loadw %k
	%t8 =l loadl %b
	%t9 =w loadw %x
	%t10 =l extsw %t9
	%t11 =l mul 8, %t10
	%t7 =l add %t8, %t11
	%t6 =l loadl %t7
	%t12 =w loadw %y
	%t13 =l extsw %t12
	%t14 =l mul 4, %t13
	%t5 =l add %t6, %t14
	storew %t4, %t5
	%t16 =w loadw %k
	%t15 =w ceqw %t16, 64
	jnz %t15, @l1, @l2
@l1
	%t19 =w loadw %x
	%t18 =w cnew %t19, 2
	jnz %t18, @l8, @l5
@l8
	%t22 =w loadw %y
	%t21 =w cnew %t22, 0
	jnz %t21, @l7, @l5
@l7
	%t28 =w loadw %x
	%t27 =w sub %t28, 2
	%t26 =w call $abs(w %t27, ...)
	%t31 =w loadw %y
	%t30 =w call $abs(w %t31, ...)
	%t25 =w add %t26, %t30
	%t24 =w ceqw %t25, 3
	jnz %t24, @l4, @l5
@l4
	%t33 =w call $board(...)
	%t35 =w loadw %N
	%t34 =w add %t35, 1
	storew %t34, %N
	%t37 =w loadw %N
	%t36 =w ceqw %t37, 10
	jnz %t36, @l9, @l10
@l9
	%t39 =w call $exit(w 0, ...)
@l10
@l5
	jmp @l3
@l2
	%t42 =w sub 0, 2
	storew %t42, %i
@l12
	%t46 =w loadw %i
	%t45 =w cslew %t46, 2
	jnz %t45, @l13, @l14
@l13
	%t49 =w sub 0, 2
	storew %t49, %j
@l15
	%t53 =w loadw %j
	%t52 =w cslew %t53, 2
	jnz %t52, @l16, @l17
@l16
	%t58 =w loadw %i
	%t57 =w call $abs(w %t58, ...)
	%t60 =w loadw %j
	%t59 =w call $abs(w %t60, ...)
	%t56 =w add %t57, %t59
	%t55 =w ceqw %t56, 3
	jnz %t55, @l21, @l19
@l21
	%t64 =w loadw %x
	%t65 =w loadw %i
	%t63 =w add %t64, %t65
	%t67 =w loadw %y
	%t68 =w loadw %j
	%t66 =w add %t67, %t68
	%t62 =w call $chk(w %t63, w %t66, ...)
	jnz %t62, @l18, @l19
@l18
	%t71 =w loadw %k
	%t70 =w add %t71, 1
	%t74 =w loadw %x
	%t75 =w loadw %i
	%t73 =w add %t74, %t75
	%t77 =w loadw %y
	%t78 =w loadw %j
	%t76 =w add %t77, %t78
	%t69 =w call $go(w %t70, w %t73, w %t76, ...)
@l19
	%t80 =w loadw %j
	%t79 =w add %t80, 1
	storew %t79, %j
	jmp @l15
@l17
	%t82 =w loadw %i
	%t81 =w add %t82, 1
	storew %t81, %i
	jmp @l12
@l14
@l3
	%t88 =l loadl %b
	%t89 =w loadw %x
	%t90 =l extsw %t89
	%t91 =l mul 8, %t90
	%t87 =l add %t88, %t91
	%t86 =l loadl %t87
	%t92 =w loadw %y
	%t93 =l extsw %t92
	%t94 =l mul 4, %t93
	%t85 =l add %t86, %t94
	storew 0, %t85
	ret 0
}


--- Output: size 2263 ---
export function $go() {
@l0
	%t0 =w par
	%t1 =w par
	%t2 =w par
	%k.1 =l alloc4 4
	storew %t0, %k.1
	%x.2 =l alloc4 4
	storew %t1, %x.2
	%y.3 =l alloc4 4
	storew %t2, %y.3
	%i.4 =l alloc4 4
	%j.5 =l alloc4 4
	%b.6 =l alloc8 8
	%N.7 =l alloc4 4
	%t4 =w load %k.1
	%t8 =l load %b.6
	%t9 =w load %x.2
	%t10 =l extsw %t9
	%t11 =l mul 8, %t10
	%t7 =l add %t8, %t11
	%t6 =l load %t7
	%t12 =w load %y.3
	%t13 =l extsw %t12
	%t14 =l mul 4, %t13
	%t5 =l add %t6, %t14
	storew %t4, %t5
	%t16 =w load %k.1
	%t15 =w ceqw %t16, 64
	jnz %t15, @l1, @l2
@l1
	%t19 =w load %x.2
	%t18 =w cnew %t19, 2
	jnz %t18, @l8, @l5
@l8
	%t22 =w load %y.3
	%t21 =w cnew %t22, 0
	jnz %t21, @l7, @l5
@l7
	%t28 =w load %x.2
	%t27 =w sub %t28, 2
	argw %t27
	%t26 =w vacall $abs
	%t31 =w load %y.3
	argw %t31
	%t30 =w vacall $abs
	%t25 =w add %t26, %t30
	%t24 =w ceqw %t25, 3
	jnz %t24, @l4, @l5
@l4
	%t33 =w vacall $board
	%t35 =w load %N.7
	%t34 =w add %t35, 1
	storew %t34, %N.7
	%t37 =w load %N.7
	%t36 =w ceqw %t37, 10
	jnz %t36, @l9, @l10
@l9
	argw 0
	%t39 =w vacall $exit
@l10
@l5
	jmp @l3
@l2
	%t42 =w sub 0, 2
	storew %t42, %i.4
@l12
	%t46 =w load %i.4
	%t45 =w cslew %t46, 2
	jnz %t45, @l13, @l14
@l13
	%t49 =w sub 0, 2
	storew %t49, %j.5
@l15
	%t53 =w load %j.5
	%t52 =w cslew %t53, 2
	jnz %t52, @l16, @l17
@l16
	%t58 =w load %i.4
	argw %t58
	%t57 =w vacall $abs
	%t60 =w load %j.5
	argw %t60
	%t59 =w vacall $abs
	%t56 =w add %t57, %t59
	%t55 =w ceqw %t56, 3
	jnz %t55, @l21, @l19
@l21
	%t64 =w load %x.2
	%t65 =w load %i.4
	%t63 =w add %t64, %t65
	%t67 =w load %y.3
	%t68 =w load %j.5
	%t66 =w add %t67, %t68
	argw %t63
	argw %t66
	%t62 =w vacall $chk
	jnz %t62, @l18, @l19
@l18
	%t71 =w load %k.1
	%t70 =w add %t71, 1
	%t74 =w load %x.2
	%t75 =w load %i.4
	%t73 =w add %t74, %t75
	%t77 =w load %y.3
	%t78 =w load %j.5
	%t76 =w add %t77, %t78
	argw %t70
	argw %t73
	argw %t76
	%t69 =w vacall $go
@l19
	%t80 =w load %j.5
	%t79 =w add %t80, 1
	storew %t79, %j.5
	jmp @l15
@l17
	%t82 =w load %i.4
	%t81 =w add %t82, 1
	storew %t81, %i.4
	jmp @l12
@l14
@l3
	%t88 =l load %b.6
	%t89 =w load %x.2
	%t90 =l extsw %t89
	%t91 =l mul 8, %t90
	%t87 =l add %t88, %t91
	%t86 =l load %t87
	%t92 =w load %y.3
	%t93 =l extsw %t92
	%t94 =l mul 4, %t93
	%t85 =l add %t86, %t94
	storew 0, %t85
	retw 0
}

--- Correct: size 2263 ---
export function $go() {
@l0
	%t0 =w par
	%t1 =w par
	%t2 =w par
	%k.1 =l alloc4 4
	storew %t0, %k.1
	%x.2 =l alloc4 4
	storew %t1, %x.2
	%y.3 =l alloc4 4
	storew %t2, %y.3
	%i.4 =l alloc4 4
	%j.5 =l alloc4 4
	%b.6 =l alloc8 8
	%N.7 =l alloc4 4
	%t4 =w load %k.1
	%t8 =l load %b.6
	%t9 =w load %x.2
	%t10 =l extsw %t9
	%t11 =l mul 8, %t10
	%t7 =l add %t8, %t11
	%t6 =l load %t7
	%t12 =w load %y.3
	%t13 =l extsw %t12
	%t14 =l mul 4, %t13
	%t5 =l add %t6, %t14
	storew %t4, %t5
	%t16 =w load %k.1
	%t15 =w ceqw %t16, 64
	jnz %t15, @l1, @l2
@l1
	%t19 =w load %x.2
	%t18 =w cnew %t19, 2
	jnz %t18, @l8, @l5
@l8
	%t22 =w load %y.3
	%t21 =w cnew %t22, 0
	jnz %t21, @l7, @l5
@l7
	%t28 =w load %x.2
	%t27 =w sub %t28, 2
	argw %t27
	%t26 =w vacall $abs
	%t31 =w load %y.3
	argw %t31
	%t30 =w vacall $abs
	%t25 =w add %t26, %t30
	%t24 =w ceqw %t25, 3
	jnz %t24, @l4, @l5
@l4
	%t33 =w vacall $board
	%t35 =w load %N.7
	%t34 =w add %t35, 1
	storew %t34, %N.7
	%t37 =w load %N.7
	%t36 =w ceqw %t37, 10
	jnz %t36, @l9, @l10
@l9
	argw 0
	%t39 =w vacall $exit
@l10
@l5
	jmp @l3
@l2
	%t42 =w sub 0, 2
	storew %t42, %i.4
@l12
	%t46 =w load %i.4
	%t45 =w cslew %t46, 2
	jnz %t45, @l13, @l14
@l13
	%t49 =w sub 0, 2
	storew %t49, %j.5
@l15
	%t53 =w load %j.5
	%t52 =w cslew %t53, 2
	jnz %t52, @l16, @l17
@l16
	%t58 =w load %i.4
	argw %t58
	%t57 =w vacall $abs
	%t60 =w load %j.5
	argw %t60
	%t59 =w vacall $abs
	%t56 =w add %t57, %t59
	%t55 =w ceqw %t56, 3
	jnz %t55, @l21, @l19
@l21
	%t64 =w load %x.2
	%t65 =w load %i.4
	%t63 =w add %t64, %t65
	%t67 =w load %y.3
	%t68 =w load %j.5
	%t66 =w add %t67, %t68
	argw %t63
	argw %t66
	%t62 =w vacall $chk
	jnz %t62, @l18, @l19
@l18
	%t71 =w load %k.1
	%t70 =w add %t71, 1
	%t74 =w load %x.2
	%t75 =w load %i.4
	%t73 =w add %t74, %t75
	%t77 =w load %y.3
	%t78 =w load %j.5
	%t76 =w add %t77, %t78
	argw %t70
	argw %t73
	argw %t76
	%t69 =w vacall $go
@l19
	%t80 =w load %j.5
	%t79 =w add %t80, 1
	storew %t79, %j.5
	jmp @l15
@l17
	%t82 =w load %i.4
	%t81 =w add %t82, 1
	storew %t81, %i.4
	jmp @l12
@l14
@l3
	%t88 =l load %b.6
	%t89 =w load %x.2
	%t90 =l extsw %t89
	%t91 =l mul 8, %t90
	%t87 =l add %t88, %t91
	%t86 =l load %t87
	%t92 =w load %y.3
	%t93 =l extsw %t92
	%t94 =l mul 4, %t93
	%t85 =l add %t86, %t94
	storew 0, %t85
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=8, stime=0, ptime=8, rtime=10, maxvsz=21696512, maxrss=3461120, nvcsw=1, nivcsw=3 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1855488, nvcsw=1, nivcsw=2 }

====== Test #27 =======
--- Input: size 392 ---
export function w $main() {
@l0
	%i =l alloc4 4
	%b =l alloc8 8
	%t0 =w call $printf(l $glo1, ...)
	storew 0, %i
@l1
	%t5 =w loadw %i
	%t4 =w csltw %t5, 8
	jnz %t4, @l2, @l3
@l2
	%t8 =w mul 8, 4
	%t12 =l loadl %b
	%t13 =w loadw %i
	%t14 =l extsw %t13
	%t15 =l mul 4, %t14
	%t11 =l add %t12, %t15
	storew %t8, %t11
	%t17 =w loadw %i
	%t16 =w add %t17, 1
	storew %t16, %i
	jmp @l1
@l3
	ret 0
}

--- Output: size 403 ---
export function $main() {
@l0
	%i.1 =l alloc4 4
	%b.2 =l alloc8 8
	argl $glo1
	%t0 =w vacall $printf
	storew 0, %i.1
@l1
	%t5 =w load %i.1
	%t4 =w csltw %t5, 8
	jnz %t4, @l2, @l3
@l2
	%t8 =w mul 8, 4
	%t12 =l load %b.2
	%t13 =w load %i.1
	%t14 =l extsw %t13
	%t15 =l mul 4, %t14
	%t11 =l add %t12, %t15
	storew %t8, %t11
	%t17 =w load %i.1
	%t16 =w add %t17, 1
	storew %t16, %i.1
	jmp @l1
@l3
	retw 0
}

--- Correct: size 403 ---
export function $main() {
@l0
	%i.1 =l alloc4 4
	%b.2 =l alloc8 8
	argl $glo1
	%t0 =w vacall $printf
	storew 0, %i.1
@l1
	%t5 =w load %i.1
	%t4 =w csltw %t5, 8
	jnz %t4, @l2, @l3
@l2
	%t8 =w mul 8, 4
	%t12 =l load %b.2
	%t13 =w load %i.1
	%t14 =l extsw %t13
	%t15 =l mul 4, %t14
	%t11 =l add %t12, %t15
	storew %t8, %t11
	%t17 =w load %i.1
	%t16 =w add %t17, 1
	storew %t16, %i.1
	jmp @l1
@l3
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=0, ptime=4, rtime=5, maxvsz=21696512, maxrss=3530752, nvcsw=1, nivcsw=2 }
checker: { utime=0, stime=0, ptime=0, rtime=4, maxvsz=323584, maxrss=1859584, nvcsw=1, nivcsw=3 }

====== Test #28 =======
--- Input: size 2101 ---
export function w $main() {
@l0
	%c =l alloc4 4
	%n =l alloc4 4
	%x =l alloc4 4
	%y =l alloc4 4
	%e =l alloc8 8
	%ie =l alloc8 8
	%col =l alloc8 8
	%W =l alloc4 4
	%H =l alloc4 4
	%rnd =l alloc4 4
	%win =l alloc4 4
	storew 800, %W
	storew 800, %H
	%t4 =w call $SDL_Init(w 32, ...)
	%t11 =w loadw %W
	%t12 =w loadw %H
	%t7 =w call $SDL_CreateWindow(l $glo1, w 0, w 0, w %t11, w %t12, w 0, ...)
	storew %t7, %win
	%t16 =w loadw %win
	%t17 =w sub 0, 1
	%t15 =w call $SDL_CreateRenderer(w %t16, w %t17, w 0, ...)
	storew %t15, %rnd
	%t22 =l loadl %e
	storel %t22, %ie
	storew 20, %c
	storew 0, %n
@l1
	%t28 =w loadw %n
	%t27 =w csltw %t28, 200
	jnz %t27, @l2, @l3
@l2
	%t31 =w loadw %c
	%t33 =l loadl %col
	%t34 =w loadw %n
	%t35 =l extsw %t34
	%t36 =l mul 4, %t35
	%t32 =l add %t33, %t36
	storew %t31, %t32
	%t39 =w loadw %c
	%t43 =w loadw %c
	%t41 =w sub 255, %t43
	%t40 =w div %t41, 8
	%t38 =w add %t39, %t40
	storew %t38, %c
	%t46 =w loadw %n
	%t45 =w add %t46, 1
	storew %t45, %n
	jmp @l1
@l3
	%t50 =l loadl %col
	%t51 =w loadw %n
	%t52 =l extsw %t51
	%t53 =l mul 4, %t52
	%t49 =l add %t50, %t53
	storew 30, %t49
	%t55 =w loadw %rnd
	%t54 =w call $SDL_RenderClear(w %t55, ...)
	storew 0, %x
@l4
	%t59 =w loadw %x
	%t60 =w loadw %W
	%t58 =w csltw %t59, %t60
	jnz %t58, @l5, @l6
@l5
	storew 0, %y
@l7
	%t64 =w loadw %y
	%t65 =w loadw %H
	%t63 =w csltw %t64, %t65
	jnz %t63, @l8, @l9
@l8
	%t67 =w loadw %x
	%t68 =w loadw %y
	%t66 =w call $plot(w %t67, w %t68, ...)
	%t70 =w loadw %y
	%t69 =w add %t70, 1
	storew %t69, %y
	jmp @l7
@l9
	%t72 =w loadw %x
	%t71 =w add %t72, 1
	storew %t71, %x
	jmp @l4
@l6
	%t74 =w loadw %rnd
	%t73 =w call $SDL_RenderPresent(w %t74, ...)
@l10
	jnz 1, @l11, @l12
@l11
	%t77 =l loadl %e
	%t76 =w call $SDL_PollEvent(l %t77, ...)
	jnz %t76, @l13, @l14
@l13
	%t81 =l loadl %ie
	%t80 =l add %t81, 0
	%t79 =w loadw %t80
	%t78 =w ceqw %t79, 769
	jnz %t78, @l16, @l17
@l16
	jmp @l12
@l17
@l14
	jmp @l10
@l12
	%t85 =w loadw %rnd
	%t84 =w call $SDL_DestroyRenderer(w %t85, ...)
	%t87 =w loadw %win
	%t86 =w call $SDL_DestroyWindow(w %t87, ...)
	%t88 =w call $SDL_Quit(...)
	ret 0
}

--- Output: size 2204 ---
export function $main() {
@l0
	%c.1 =l alloc4 4
	%n.2 =l alloc4 4
	%x.3 =l alloc4 4
	%y.4 =l alloc4 4
	%e.5 =l alloc8 8
	%ie.6 =l alloc8 8
	%col.7 =l alloc8 8
	%W.8 =l alloc4 4
	%H.9 =l alloc4 4
	%rnd.10 =l alloc4 4
	%win.11 =l alloc4 4
	storew 800, %W.8
	storew 800, %H.9
	argw 32
	%t4 =w vacall $SDL_Init
	%t11 =w load %W.8
	%t12 =w load %H.9
	argl $glo1
	argw 0
	argw 0
	argw %t11
	argw %t12
	argw 0
	%t7 =w vacall $SDL_CreateWindow
	storew %t7, %win.11
	%t16 =w load %win.11
	%t17 =w sub 0, 1
	argw %t16
	argw %t17
	argw 0
	%t15 =w vacall $SDL_CreateRenderer
	storew %t15, %rnd.10
	%t22 =l load %e.5
	storel %t22, %ie.6
	storew 20, %c.1
	storew 0, %n.2
@l1
	%t28 =w load %n.2
	%t27 =w csltw %t28, 200
	jnz %t27, @l2, @l3
@l2
	%t31 =w load %c.1
	%t33 =l load %col.7
	%t34 =w load %n.2
	%t35 =l extsw %t34
	%t36 =l mul 4, %t35
	%t32 =l add %t33, %t36
	storew %t31, %t32
	%t39 =w load %c.1
	%t43 =w load %c.1
	%t41 =w sub 255, %t43
	%t40 =w div %t41, 8
	%t38 =w add %t39, %t40
	storew %t38, %c.1
	%t46 =w load %n.2
	%t45 =w add %t46, 1
	storew %t45, %n.2
	jmp @l1
@l3
	%t50 =l load %col.7
	%t51 =w load %n.2
	%t52 =l extsw %t51
	%t53 =l mul 4, %t52
	%t49 =l add %t50, %t53
	storew 30, %t49
	%t55 =w load %rnd.10
	argw %t55
	%t54 =w vacall $SDL_RenderClear
	storew 0, %x.3
@l4
	%t59 =w load %x.3
	%t60 =w load %W.8
	%t58 =w csltw %t59, %t60
	jnz %t58, @l5, @l6
@l5
	storew 0, %y.4
@l7
	%t64 =w load %y.4
	%t65 =w load %H.9
	%t63 =w csltw %t64, %t65
	jnz %t63, @l8, @l9
@l8
	%t67 =w load %x.3
	%t68 =w load %y.4
	argw %t67
	argw %t68
	%t66 =w vacall $plot
	%t70 =w load %y.4
	%t69 =w add %t70, 1
	storew %t69, %y.4
	jmp @l7
@l9
	%t72 =w load %x.3
	%t71 =w add %t72, 1
	storew %t71, %x.3
	jmp @l4
@l6
	%t74 =w load %rnd.10
	argw %t74
	%t73 =w vacall $SDL_RenderPresent
@l10
	jnz 1, @l11, @l12
@l11
	%t77 =l load %e.5
	argl %t77
	%t76 =w vacall $SDL_PollEvent
	jnz %t76, @l13, @l14
@l13
	%t81 =l load %ie.6
	%t80 =l add %t81, 0
	%t79 =w load %t80
	%t78 =w ceqw %t79, 769
	jnz %t78, @l16, @l17
@l16
	jmp @l12
@l17
@l14
	jmp @l10
@l12
	%t85 =w load %rnd.10
	argw %t85
	%t84 =w vacall $SDL_DestroyRenderer
	%t87 =w load %win.11
	argw %t87
	%t86 =w vacall $SDL_DestroyWindow
	%t88 =w vacall $SDL_Quit
	retw 0
}

--- Correct: size 2204 ---
export function $main() {
@l0
	%c.1 =l alloc4 4
	%n.2 =l alloc4 4
	%x.3 =l alloc4 4
	%y.4 =l alloc4 4
	%e.5 =l alloc8 8
	%ie.6 =l alloc8 8
	%col.7 =l alloc8 8
	%W.8 =l alloc4 4
	%H.9 =l alloc4 4
	%rnd.10 =l alloc4 4
	%win.11 =l alloc4 4
	storew 800, %W.8
	storew 800, %H.9
	argw 32
	%t4 =w vacall $SDL_Init
	%t11 =w load %W.8
	%t12 =w load %H.9
	argl $glo1
	argw 0
	argw 0
	argw %t11
	argw %t12
	argw 0
	%t7 =w vacall $SDL_CreateWindow
	storew %t7, %win.11
	%t16 =w load %win.11
	%t17 =w sub 0, 1
	argw %t16
	argw %t17
	argw 0
	%t15 =w vacall $SDL_CreateRenderer
	storew %t15, %rnd.10
	%t22 =l load %e.5
	storel %t22, %ie.6
	storew 20, %c.1
	storew 0, %n.2
@l1
	%t28 =w load %n.2
	%t27 =w csltw %t28, 200
	jnz %t27, @l2, @l3
@l2
	%t31 =w load %c.1
	%t33 =l load %col.7
	%t34 =w load %n.2
	%t35 =l extsw %t34
	%t36 =l mul 4, %t35
	%t32 =l add %t33, %t36
	storew %t31, %t32
	%t39 =w load %c.1
	%t43 =w load %c.1
	%t41 =w sub 255, %t43
	%t40 =w div %t41, 8
	%t38 =w add %t39, %t40
	storew %t38, %c.1
	%t46 =w load %n.2
	%t45 =w add %t46, 1
	storew %t45, %n.2
	jmp @l1
@l3
	%t50 =l load %col.7
	%t51 =w load %n.2
	%t52 =l extsw %t51
	%t53 =l mul 4, %t52
	%t49 =l add %t50, %t53
	storew 30, %t49
	%t55 =w load %rnd.10
	argw %t55
	%t54 =w vacall $SDL_RenderClear
	storew 0, %x.3
@l4
	%t59 =w load %x.3
	%t60 =w load %W.8
	%t58 =w csltw %t59, %t60
	jnz %t58, @l5, @l6
@l5
	storew 0, %y.4
@l7
	%t64 =w load %y.4
	%t65 =w load %H.9
	%t63 =w csltw %t64, %t65
	jnz %t63, @l8, @l9
@l8
	%t67 =w load %x.3
	%t68 =w load %y.4
	argw %t67
	argw %t68
	%t66 =w vacall $plot
	%t70 =w load %y.4
	%t69 =w add %t70, 1
	storew %t69, %y.4
	jmp @l7
@l9
	%t72 =w load %x.3
	%t71 =w add %t72, 1
	storew %t71, %x.3
	jmp @l4
@l6
	%t74 =w load %rnd.10
	argw %t74
	%t73 =w vacall $SDL_RenderPresent
@l10
	jnz 1, @l11, @l12
@l11
	%t77 =l load %e.5
	argl %t77
	%t76 =w vacall $SDL_PollEvent
	jnz %t76, @l13, @l14
@l13
	%t81 =l load %ie.6
	%t80 =l add %t81, 0
	%t79 =w load %t80
	%t78 =w ceqw %t79, 769
	jnz %t78, @l16, @l17
@l16
	jmp @l12
@l17
@l14
	jmp @l10
@l12
	%t85 =w load %rnd.10
	argw %t85
	%t84 =w vacall $SDL_DestroyRenderer
	%t87 =w load %win.11
	argw %t87
	%t86 =w vacall $SDL_DestroyWindow
	%t88 =w vacall $SDL_Quit
	retw 0
}

--- Stderr: size 0 ---

--- Checker output: size 3 ---
OK

--- Resource usage ---
program: { utime=4, stime=4, ptime=8, rtime=9, maxvsz=21696512, maxrss=3588096, nvcsw=1, nivcsw=4 }
checker: { utime=0, stime=0, ptime=0, rtime=3, maxvsz=323584, maxrss=1863680, nvcsw=1, nivcsw=2 }
